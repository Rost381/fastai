1
00:00:00,149 --> 00:00:03,600
Добро пожаловать на третью неделю курса.

2
00:00:03,600 --> 00:00:09,599
Вы наверняка заметили, что на этой неделе на форумах происходило много интересного.

3
00:00:09,599 --> 00:00:25,920
Многие участники курса подготовили материалы по курсу, чтобы помочь своим одногруппникам и лучше разобраться самим.

4
00:00:25,920 --> 00:00:32,340
Я хочу рассказать про некоторые, про что-то я уже писал на вики, но материалов очень много.

5
00:00:32,340 --> 00:00:42,480
Пользователь reshamas создала много полезных заметок - например, что делать, если не получается подключиться к AWS,

6
00:00:46,079 --> 00:00:57,750
она расписала всё в мелочах, я считаю, что это очень круто.

7
00:00:57,750 --> 00:01:05,460
Если вы делаете какие-то заметки для себя - поделитесь ими на форуме, это удобно делать в файлах разметки Markdown.

8
00:01:07,439 --> 00:01:13,789
Если вы загрузите свои заметки на GitHub, все смогут ими пользоваться. Или загрузите их на наш форум,

9
00:01:13,889 --> 00:01:25,140
reshamas сделала так со своей заметкой про tmux.

10
00:01:25,140 --> 00:01:39,869
tmux - консольная утилита, позволяющая показывать несколько терминалов на одном экране.

11
00:01:39,869 --> 00:01:48,210
Здесь в одном терминале у меня модули библиотеки, открытые редактором vim,

12
00:01:48,210 --> 00:01:53,579
в другом запущен Jupyter Notebook и так далее.

13
00:01:53,579 --> 00:02:03,060
Если интересно, reshamas написала на эту тему туториал, в её аккаунте на GitHub ещё много интересного.

14
00:02:03,060 --> 00:02:28,810
Apil Tamang написал хороший сжатый конспект предыдущей лекции.

15
00:02:28,810 --> 00:02:45,069
Pavel Surmenok сделал пост про алгоритм поиска скорости обучения.

16
00:02:45,069 --> 00:02:59,500
Это очень круто, потому что об этом алгоритме ещё нигде не писали, а он очень полезный.

17
00:02:59,500 --> 00:03:13,560
Когда я поделился ссылкой на его пост в Twitter, им поделились сотни раз, у поста тысячи просмотров, отличная работа.

18
00:03:13,560 --> 00:03:20,779
Radek написал несколько полезных постов, мне особенно понравился гайд по PyTorch,

19
00:03:20,879 --> 00:03:32,260
он подойдёт для продвинутых студентов, например, тех, кто никогда не использовал PyTorch, но уже что-то знает про численное программирование.

20
00:03:35,560 --> 00:03:40,624
Есть интересная статья про связь между скоростью обучения и размером минибатча.

21
00:03:40,724 --> 00:03:46,030
Один студент недавно задал мне этот вопрос, поэтому я вспомнил этот пост.

22
00:03:46,030 --> 00:04:01,235
Автор поста пробовал различные скорости обучения и размеры минибатча и проанализировал, как они связаны, можете сами попробовать.

23
00:04:01,335 --> 00:04:15,586
Radek написал пост на тему моего утверждения о том, что SDGR находит более плоские области поверхности потерь и в них модель лучше обобщает.

24
00:04:15,686 --> 00:04:25,147
Он попробовал описать эту закономерность более точно, не очень удачно, но пост интересный.

25
00:04:25,247 --> 00:04:32,999
Есть пост по введению в свёрточные нейронные сети.

26
00:04:32,999 --> 00:04:57,059
Anand Saha написал отличный анализ архитектуры ResNet, мы ещё обсудим это в курсе, продвинутые студенты могут читать уже сейчас.

27
00:04:57,059 --> 00:05:04,349
Apil Tamang написал похожий пост. В общем, на форумах много чего происходит.

28
00:05:06,059 --> 00:05:17,479
Мы также создали форум для новичков. Тупых вопросов не бывает, но иногда страшно задавать вопрос про что-то простое,

29
00:05:19,860 --> 00:05:29,819
когда вокруг обсуждаются очень сложные вещи, надеемся, что форум новичков будет не таким устрашающим.

30
00:05:29,819 --> 00:05:38,632
Если вы продвинутый студент и можете отвечать на такие вопросы, пожалуйста, делайте это дружелюбно -

31
00:05:38,732 --> 00:05:47,934
у людей за плечами может быть всего год опыта программирования и никакого опыта машинного обучения.

32
00:05:48,034 --> 00:05:56,159
Если вам хочется написать какой-то вспомогательный материал, не стесняйтесь - большинство авторов только что упомянутых заметок

33
00:05:56,159 --> 00:06:04,769
никогда не публиковали ничего в интернете, они такие же люди, как и вы.

34
00:06:04,769 --> 00:06:20,399
Если вы не уверены в каких-то деталях, запостите сначала на форум, люди помогут вам улучшить ваш материал фразами вроде

35
00:06:20,399 --> 00:06:29,439
"Вот здесь всё устроено немного по-другому, сейчас расскажу" или "Это очень интересно, вы не думали углубиться в эту тему?".

36
00:06:29,539 --> 00:06:38,969
К текущему моменту мы немного обсудили свёрточные нейронные сети.

37
00:06:38,969 --> 00:06:59,319
Мы не углублялись в детали того, как они работают, зато построили на их основе превосходного качества модель.

38
00:06:59,319 --> 00:07:12,280
Сегодня мы ещё раз посмотрим на модели и наконец-то подойдём к теории - что такое свёрточная нейронная сеть,

39
00:07:12,280 --> 00:07:16,000
что такое свёртка, как и почему это работает.

40
00:07:16,000 --> 00:07:25,930
Дальше мы продвинемся по нашему плану и обсудим использование нейронных сетей для анализа структурированных данных -

41
00:07:25,930 --> 00:07:31,449
логистика, прогнозы, анализ рынка и прочее.

42
00:07:31,449 --> 00:07:45,550
Потом посмотрим на обработку естественного языка, потом на коллаборативную фильтрацию для рекомендательных систем.

43
00:07:45,550 --> 00:07:53,020
Это будет проходить в том же формате, что и обсуждение CNN - без углубления в теорию, но с построением качественных моделей.

44
00:07:55,150 --> 00:08:01,984
Потом мы пройдёмся по этим же темам, но в другом порядке и более углубленно -

45
00:08:02,084 --> 00:08:09,949
рассмотрим коллаборативную фильтрацию и поймём, как написан соответствующий код и какая за этим стоит математика,

46
00:08:10,049 --> 00:08:20,620
потом сделаем то же самое для анализа структурированных данных, свёрточных нейронных сетей и обработки естественного языка.

47
00:08:20,620 --> 00:08:37,078
Давайте проговорим некоторые вещи с прошлых лекций ещё раз.

48
00:08:37,178 --> 00:08:55,889
Я хочу убедиться, что все смогут повторить модель с прошлой лекции, обучив её на другом датасете.

49
00:08:55,889 --> 00:09:11,339
Для этого нужно скачать данные. Данные можно скачивать либо с Kaggle, либо откуда-то ещё.

50
00:09:11,339 --> 00:09:37,960
Для скачивания данных с Kaggle мы используем kaggle-cli, он должен был установиться при загрузке материалов для курса.

51
00:09:38,060 --> 00:09:53,279
Если в процессе скачивания данных на сайте Kaggle что-то меняется, kaggle-cli падает,

52
00:09:53,279 --> 00:10:13,434
с этим можно справиться командой pip install kaggle-cli --upgrade.

53
00:10:13,534 --> 00:10:25,765
После этого следуйте инструкциям reshamas для скачивания данных.

54
00:10:25,865 --> 00:10:43,509
Команда для скачивания данных: kg download -u <username> -p <password> -c <competition>.

55
00:10:43,609 --> 00:11:02,100
<competition> - это фраза, идущая после /c/ в адресной строке на странице соревнования.

56
00:11:02,100 --> 00:11:12,650
Перед использованием kaggle-cli убедитесь, что приняли правила использования, то есть скачивали данные вручную хотя бы однажды.

57
00:11:12,750 --> 00:11:18,850
Если правила не приняты, kaggle-cli вам об этом скажет.

58
00:11:18,850 --> 00:11:31,085
Если вы используете аккаунт Google для входа в Kaggle, kaggle-cli не будет работать, используйте форму восстановления пароля Kaggle.

59
00:11:31,185 --> 00:11:38,775
kaggle-cli создаст папку на вашем компьютере и скачает туда данные.

60
00:11:38,875 --> 00:11:52,600
kaggle-cli не подходит, если вы используете датасет не с Kaggle или если вам не нужны все предоставленные там данные.

61
00:11:52,600 --> 00:12:11,890
Например, в этом соревновании данные предоставлены в форматах TIFF (19 ГБ) и JPG (600 МБ), возможно, вы не захотите использовать оба.

62
00:12:11,890 --> 00:12:32,480
Для таких случаев есть расширение CurlWget для Google Chrome.

63
00:12:32,580 --> 00:13:02,944
Для всех страниц, откуда можно что-нибудь скачать, CurlWget предоставит вам ссылку для скачивания материалов из терминала.

64
00:13:03,044 --> 00:13:10,449
В ссылке содержатся куки вашего браузера.

65
00:13:10,449 --> 00:13:19,420
С помощью этого расширения можно скачать что угодно - например, ваш любимый сериал.

66
00:13:19,420 --> 00:13:33,610
Это очень полезный инструмент для анализа данных, потому что зачастую приходится анализировать видео.

67
00:13:33,610 --> 00:13:44,019
Итак, есть два способа получить данные. После этого можно начинать обучать модель.

68
00:13:44,019 --> 00:13:57,670
В переменной PATH указано, что данные лежат в директории data рабочей директории Jupyter ноутбука.

69
00:13:57,670 --> 00:14:04,990
Это не всегда удобно - данные могут лежать в другом месте или даже на другом диске,

70
00:14:04,990 --> 00:14:17,949
поэтому можно создать символическую ссылку на директорию с данными.

71
00:14:17,949 --> 00:14:24,109
Вы можете сложить ваши данные куда угодно и добавить на них ссылку или сложить их в рабочую директорию Jupyter ноутбука.

72
00:14:24,209 --> 00:14:35,829
Символические ссылки - это очень удобно, можете почитать про них на нашем форуме, если не работали с ними раньше.

73
00:14:35,829 --> 00:14:45,490
Как видите, модули библиотеки fast.ai доступны из Jupyter ноутбука таким же образом.

74
00:14:45,490 --> 00:15:06,845
Чтобы вывести список файлов и директорий с указанием ссылок в Linux, используйте команду ls -l.

75
00:15:06,945 --> 00:15:20,315
Вам могло показаться, что для обучения модели нужно больше кода, чем на самом деле.

76
00:15:20,415 --> 00:15:28,292
Здесь на одном экране показаны все шаги, которые я проделал для обучения модели для класификации кошек и собак.

77
00:15:28,392 --> 00:15:36,197
Здесь не показано скачивание и распаковка данных с Kaggle.

78
00:15:36,297 --> 00:15:51,130
Это все необходимые этапы. Сначала мы импортируем библиотеки - fastai.conv_learner импортирует всё необходимое сам.

79
00:15:51,130 --> 00:15:57,860
Нужно указать путь к файлам, размер изображений и размер минибатча.

80
00:15:57,960 --> 00:16:10,940
В этой строке мы говорим, как нужно преобразовать изображения - какая будет модель, какого они должны быть размера,

81
00:16:11,040 --> 00:16:18,490
какой алгоритм дополнения данных использовать, какое максимальное увеличение использовать.

82
00:16:18,490 --> 00:16:34,360
Здесь мы говорим, что данные рассортированы на обучающую и валидационную выборку, а внутри каждой выборки - на кошек и собак.

83
00:16:34,360 --> 00:16:45,170
Если папки с обучающей и валидационной выборкой названы нестандартно, их названия можно передать через параметры trn_name и val_name.

84
00:16:45,270 --> 00:16:56,380
Название папки с неразмеченной тестовой выборкой test_name необходимо указывать, если вы будете отправлять модель на Kaggle.

85
00:16:59,770 --> 00:17:08,205
После этого мы создаём модель с архитектурой ResNet на основе уже обученной и вызываем метод .fit().

86
00:17:08,305 --> 00:17:17,420
Напомню, что по умолчанию все слои, кроме последних, заморожены, мы ещё будем про это говорить.

87
00:17:17,420 --> 00:17:23,110
Метод .fit() работал около двух с половиной минут. Я не выставлял precompute=True.

88
00:17:26,119 --> 00:17:35,390
На форумах было много уточняющих вопросов по поводу значения этого параметра, повторюсь - это просто небольшое ускорение.

89
00:17:35,390 --> 00:17:42,325
Если не до конца понятно, просто пропускайте и оставляйте precompute=False по умолчанию.

90
00:17:42,425 --> 00:17:52,635
precompute=True кэширует некоторые промежуточные результаты, чтобы их не нужно было пересчитывать каждый раз.

91
00:17:52,735 --> 00:18:11,180
Помните, что с precomputed=True не работает дополнение данных, потому что дополнение данных не работает с предвычисленными активациями.

92
00:18:11,180 --> 00:18:14,780
Я максимально упростил процесс, поэтому precompute=False.

93
00:18:14,780 --> 00:18:24,110
Последний слой обучается 3 цикла с длиной цикла в одну эпоху (cycle_len=1).

94
00:18:24,110 --> 00:18:25,890
После этого я размораживаю модель и обучаю уже все слои.

95
00:18:25,990 --> 00:18:39,170
Метод .bn_freeze() мы ещё обсудим, это особенность сложных архитектур типа ResNet50 или ResNeXt101.

96
00:18:39,170 --> 00:18:49,005
Эту строку имеет добавлять после разморозки, если вы используете датасеты, подобные изображениям ImageNet -

97
00:18:49,105 --> 00:19:02,495
фотографии обычных объектов со стороны размера от 200 до 500 пикселей.

98
00:19:02,595 --> 00:19:10,630
Для продвинутых студентов - это фиксирует нормализацию скользящего среднего.

99
00:19:10,730 --> 00:19:20,409
Мы ещё обсудим это во второй части курса, в других библиотеках этого нет, но это очень важный аспект.

100
00:19:20,409 --> 00:19:31,789
После этого все слои нейронной сети обучаются в течение одной эпохи, и применяется дополнение тестовых данных.

101
00:19:31,889 --> 00:19:37,909
Это даёт долю правильных ответов в 99.45%.

102
00:19:38,009 --> 00:19:47,139
Это минимальные шаги, которые можно выполнить при работе с новым датасетом,

103
00:19:47,139 --> 00:20:02,799
при условии, что вы уже подобрали скорость обучения, знаете, как устроены данные и так далее.

104
00:20:02,799 --> 00:20:15,499
Я хотел показать вам, как устроены другие библиотеки, и выбрал для этого Keras.

105
00:20:15,599 --> 00:20:33,059
Библиотека fast.ai построена на основе PyTorch, а Keras поддерживает TensorFlow, MXNet, CNTK и многие другие библиотеки,

106
00:20:33,159 --> 00:20:37,450
большинство людей используют Keras с TensorFlow.

107
00:20:37,450 --> 00:20:51,024
В Jupyter ноутбуке keras_lesson1.ipynb я постараюсь воссоздать модель с первой лекции на Keras, чтобы вы увидели, как это можно делать.

108
00:20:51,124 --> 00:20:59,110
*отвечая на вопрос из зала* Я не буду пока ничего говорить про метод .bn_freeze(), кроме показаний к применению -

109
00:21:00,850 --> 00:21:11,950
это архитектура нейронной сети с числом больше 34, как ResNet50 или ResNeXt101,

110
00:21:11,950 --> 00:21:24,520
и датасет, похожий на изображения ImageNet, где объект занимает большую часть изображений нормального размера.

111
00:21:24,520 --> 00:21:32,989
Если вы не уверены в его необходимости, попробуйте убрать и сравнить результаты.

112
00:21:33,089 --> 00:21:39,910
Продвинутые студенты наверняка начнут обсуждать это на форумах уже сейчас, а мы дойдём до этого

113
00:21:39,910 --> 00:21:46,720
только во второй части курса, когда вернёмся к свёрточным нейронным сетям.

114
00:21:46,720 --> 00:22:01,480
Итак, для работы с Keras нужно импортировать необходимые модули.

115
00:22:01,480 --> 00:22:12,151
Keras поддерживает стандартный способ сортировки данных на обучающую и валидационную выборку и на классы внутри выборки.

116
00:22:12,251 --> 00:22:22,805
Здесь мы указываем пути к папкам с обучающей и валидационной выборкой.

117
00:22:22,905 --> 00:22:36,575
Вы заметите, что с Keras обучение модели требует больше кода и различных параметров,

118
00:22:36,675 --> 00:22:44,650
и очень просто задать неправильные параметры, поэтому я постараюсь подробно всё показать.

119
00:22:44,650 --> 00:22:55,030
Для подготовки данных необходимо создать генератор данных конструктором ImageDataGenerator().

120
00:22:55,030 --> 00:23:10,634
В параметры генератора данных необходимо передать параметры дополнения данных и нормализации.

121
00:23:10,734 --> 00:23:15,619
В библиотеке fast.ai достаточно указать архитектуру, например, ResNet50, и необходимые параметры выставляются автоматически,

122
00:23:15,719 --> 00:23:21,700
здесь надо примерно понимать, что для этого требуется.

123
00:23:21,700 --> 00:23:30,220
В принципе копирования кода из интернета достаточно, чтобы всё работало.

124
00:23:30,220 --> 00:23:43,550
Нет общепринятых стандартов по поводу этих параметров дополнения данных, я скопировал эту строку из документации Keras.

125
00:23:43,550 --> 00:23:49,140
Я не знаю, хороший ли это набор параметров, но в документации используется такой.

126
00:23:49,240 --> 00:23:56,540
Параметры говорят, отражать ли изображения относительно горизонтали, как увеличивать, как сдвигать.

127
00:23:56,540 --> 00:24:03,102
Из генератора данных создаётся генератор методом .flow_from_directory().

128
00:24:03,202 --> 00:24:17,985
В его параметры передаётся путь к файлам, размер изображений, размер минибатча и параметр class_mode.

129
00:24:18,085 --> 00:24:31,650
Параметр class_mode указывает вид задачи классификации - двухклассовая или многоклассовая, class_mode='binary' или class_mode='categorial'.

130
00:24:31,750 --> 00:24:36,525
У нас два класса - кошки и собаки, class_mode='binary'.

131
00:24:36,625 --> 00:24:48,048
Необходимо отдельно создать генератор данных без дополнения данных для валидации

132
00:24:48,148 --> 00:25:00,760
и создать соответствующий генератор с параметром shuffle=False, чтобы валидационная выборка не перемешивалась -

133
00:25:00,860 --> 00:25:11,270
это полезно для обучающей выборки, но на валидационной помешает отслеживать прогресс в обучении.

134
00:25:11,270 --> 00:25:18,465
Эти шаги в Keras необходимо делать каждый раз.

135
00:25:18,565 --> 00:25:32,750
Keras не поддерживает ResNet34, поэтому в конце прошлой лекции я поменял ResNet34 на ResNet50, чтобы мы могли сравнить fastai и Keras на одной архитектуре.

136
00:25:32,750 --> 00:25:42,290
В Keras модель не подстраивается под датасет автоматически, это нужно делать вручную.

137
00:25:42,290 --> 00:25:50,600
Для этого конструктором ResNet50() создаётся база модели и к ней вручную добавляются дополнительные слои.

138
00:25:50,600 --> 00:26:01,370
К концу этого курса вы поймёте, почему мы добавили именно эти три слоя.

139
00:26:01,370 --> 00:26:06,070
Модель создаётся конструктором Model().

140
00:26:06,070 --> 00:26:19,515
В Keras нет встроенной функции заморозки, поэтому мы проходимся по всем слоям и вызываем метод .trainable=False.

141
00:26:19,615 --> 00:26:27,110
В Keras необходимо компилировать модель после создания методом .compile().

142
00:26:28,160 --> 00:26:33,860
Метод принимает как параметры вид оптимизации, функцию потерь и метрику оценки качества модели.

143
00:26:37,039 --> 00:26:47,324
В fast.ai эти значения передаются по умолчанию, хотя есть возможность заменить их своими.

144
00:26:47,424 --> 00:26:55,886
Вместо метода .fit() вызывается метод .fit_generator(), он принимает как параметры два только что созданных генератора,

145
00:26:55,986 --> 00:27:06,081
зачем-то просит количество минибатчей в одной эпохе - это размер генератора, делённый на размер минибатча.

146
00:27:06,181 --> 00:27:11,780
Как и в fast.ai, задаётся количество эпох.

147
00:27:16,100 --> 00:27:35,639
Задаётся количество воркеров. В отличие от fast.ai, по умолчанию они не используются, важно не забыть про этот параметр для достижения хорошей скорости.

148
00:27:35,739 --> 00:27:43,469
Этого достаточно, чтобы начать тонкую настройку последних слоёв.

149
00:27:43,569 --> 00:27:53,805
На валидационной выборке доля правильныз ответов получилась 95%, но, как видите, на первой и второй эпохах она была 49% и 69%.

150
00:27:53,905 --> 00:28:01,115
Я не знаю, почему это так - возможно, ошибка в Keras, возможно, в моём коде.

151
00:28:01,215 --> 00:28:07,469
Я писал про это в Twitter, но там никто не смог разобраться.

152
00:28:07,569 --> 00:28:15,509
Это одна из причин, почему я использую fast.ai в этом курсе - там гораздо сложнее всё испортить.

153
00:28:15,609 --> 00:28:18,806
Я не знаю, в чём тут ошибка.

154
00:28:18,906 --> 00:28:23,270
Вопрос из зала: Здесь используется TensorFlow?

155
00:28:23,500 --> 00:28:50,279
Да, здесь используется TensorFlow, для этого нужно установить его командой pip install tensorflow-gpu keras.

156
00:28:50,379 --> 00:29:08,539
В Keras нет дифференциальных скоростей обучения и частичного размораживания, поэтому нужно вручную отделить последние слои.

157
00:29:08,539 --> 00:29:17,210
Я буду настраивать все слои, начиная со 140-го, для этого прохожу по всем слоям и замораживаю или размораживаю их, после этого снова вызываю метод .compile().

158
00:29:17,210 --> 00:29:26,924
После этого я снова обучаю модель, доля правильных ответов на обучающей выборке примерно такая же, а на валидационной опять ерунда.

159
00:29:27,024 --> 00:29:40,062
Даже если не учитывать это, Keras проигрывает в сравнении с fastai - кода гораздо больше и результаты хуже:

160
00:29:40,162 --> 00:29:49,934
модель на Keras за восемь минут достигла доли правильных ответов в 97% на обучающей выборке,

161
00:29:50,034 --> 00:30:02,380
а модель на fastai за четыре или пять минут - 99.5% на валидационной выборке.

162
00:30:02,380 --> 00:30:17,620
Используйте TensorFlow, если вы разрабатываете что-то для смартфонов, PyTorch пока плохо это поддерживает.

163
00:30:17,620 --> 00:30:24,365
Вам придётся использовать TensorFlow, если это делает компания, где вы работаете.

164
00:30:24,465 --> 00:30:37,000
Если вам нужно повторить что-то из этого курса с TensorFlow, используйте Keras и будьте готовы к тому,

165
00:30:37,000 --> 00:30:52,090
что будет больше кода, и будет сложнее повторить результаты, которые легко достигаются в fast.ai.

166
00:30:54,669 --> 00:31:01,600


167
00:31:03,970 --> 00:31:08,110


168
00:31:09,910 --> 00:31:14,169


169
00:31:14,169 --> 00:31:18,700


170
00:31:18,700 --> 00:31:22,179


171
00:31:22,179 --> 00:31:26,559


172
00:31:28,179 --> 00:31:32,559


173
00:31:33,820 --> 00:31:38,590


174
00:31:38,590 --> 00:31:43,270


175
00:31:43,270 --> 00:31:49,390


176
00:31:49,390 --> 00:31:55,590


177
00:31:56,820 --> 00:32:00,780


178
00:32:00,780 --> 00:32:11,120


179
00:32:11,120 --> 00:32:15,030


180
00:32:15,030 --> 00:32:19,890


181
00:32:19,890 --> 00:32:26,600


182
00:32:30,870 --> 00:32:35,910


183
00:32:35,910 --> 00:32:39,960


184
00:32:39,960 --> 00:32:44,100


185
00:32:47,040 --> 00:32:51,260


186
00:32:51,260 --> 00:32:56,429


187
00:32:56,429 --> 00:33:01,500


188
00:33:01,500 --> 00:33:06,210


189
00:33:06,210 --> 00:33:10,230


190
00:33:10,230 --> 00:33:15,780


191
00:33:15,780 --> 00:33:22,140


192
00:33:22,140 --> 00:33:26,190


193
00:33:26,190 --> 00:33:31,860


194
00:33:35,610 --> 00:33:42,960


195
00:33:42,960 --> 00:33:52,200


196
00:33:52,200 --> 00:33:58,380


197
00:33:58,380 --> 00:34:05,010


198
00:34:05,490 --> 00:34:11,579


199
00:34:11,579 --> 00:34:15,929


200
00:34:15,929 --> 00:34:21,059


201
00:34:21,059 --> 00:34:27,859


202
00:34:31,799 --> 00:34:36,149


203
00:34:36,149 --> 00:34:40,139


204
00:34:40,139 --> 00:34:44,039


205
00:34:44,039 --> 00:34:51,210


206
00:34:51,210 --> 00:34:57,750


207
00:34:57,750 --> 00:35:03,740


208
00:35:03,740 --> 00:35:09,660


209
00:35:09,660 --> 00:35:13,500


210
00:35:13,500 --> 00:35:22,130


211
00:35:25,549 --> 00:35:32,130


212
00:35:32,130 --> 00:35:35,369


213
00:35:35,369 --> 00:35:40,980


214
00:35:40,980 --> 00:35:48,650


215
00:35:48,650 --> 00:35:54,539


216
00:35:54,539 --> 00:35:59,760


217
00:35:59,760 --> 00:36:03,809


218
00:36:03,809 --> 00:36:10,529


219
00:36:10,529 --> 00:36:16,020


220
00:36:16,020 --> 00:36:19,470


221
00:36:19,470 --> 00:36:23,340


222
00:36:23,340 --> 00:36:26,400


223
00:36:26,400 --> 00:36:30,990


224
00:36:33,630 --> 00:36:38,640


225
00:36:41,670 --> 00:36:47,300


226
00:36:47,300 --> 00:36:52,800


227
00:36:52,800 --> 00:37:02,790


228
00:37:02,790 --> 00:37:10,410


229
00:37:10,410 --> 00:37:24,000


230
00:37:24,000 --> 00:37:30,900


231
00:37:30,900 --> 00:37:35,280


232
00:37:35,280 --> 00:37:41,180


233
00:37:44,280 --> 00:37:47,790


234
00:37:49,350 --> 00:37:55,620


235
00:37:55,620 --> 00:37:58,950


236
00:37:58,950 --> 00:38:04,170


237
00:38:04,170 --> 00:38:09,300


238
00:38:09,300 --> 00:38:14,970


239
00:38:18,390 --> 00:38:25,290


240
00:38:25,290 --> 00:38:31,430


241
00:38:33,490 --> 00:38:38,590


242
00:38:40,330 --> 00:38:45,820


243
00:38:45,820 --> 00:38:51,820


244
00:38:51,820 --> 00:38:56,470


245
00:38:58,120 --> 00:39:03,370


246
00:39:03,370 --> 00:39:08,380


247
00:39:08,380 --> 00:39:15,160


248
00:39:17,170 --> 00:39:22,200


249
00:39:24,940 --> 00:39:31,270


250
00:39:31,270 --> 00:39:34,960


251
00:39:34,960 --> 00:39:42,910


252
00:39:42,910 --> 00:39:47,290


253
00:39:47,290 --> 00:39:52,390


254
00:39:52,390 --> 00:39:59,350


255
00:39:59,350 --> 00:40:05,800


256
00:40:05,800 --> 00:40:16,230


257
00:40:16,230 --> 00:40:21,390


258
00:40:21,390 --> 00:40:27,760


259
00:40:27,760 --> 00:40:31,270


260
00:40:32,500 --> 00:40:36,310


261
00:40:36,310 --> 00:40:41,110


262
00:40:41,110 --> 00:40:45,280


263
00:40:45,280 --> 00:40:51,220


264
00:40:55,440 --> 00:41:01,570


265
00:41:01,570 --> 00:41:05,320


266
00:41:05,320 --> 00:41:10,690


267
00:41:10,690 --> 00:41:15,250


268
00:41:15,250 --> 00:41:21,490


269
00:41:21,490 --> 00:41:26,230


270
00:41:26,230 --> 00:41:31,330


271
00:41:31,330 --> 00:41:36,610


272
00:41:36,610 --> 00:41:41,350


273
00:41:41,350 --> 00:41:46,480


274
00:41:46,480 --> 00:41:52,630


275
00:41:52,630 --> 00:41:56,980


276
00:41:56,980 --> 00:42:02,080


277
00:42:02,080 --> 00:42:07,330


278
00:42:07,330 --> 00:42:11,350


279
00:42:11,350 --> 00:42:15,040


280
00:42:15,040 --> 00:42:22,050


281
00:42:22,080 --> 00:42:29,580


282
00:42:29,580 --> 00:42:34,500


283
00:42:34,500 --> 00:42:42,410


284
00:42:43,850 --> 00:42:51,720


285
00:42:51,720 --> 00:42:56,730


286
00:42:56,730 --> 00:43:01,320


287
00:43:01,320 --> 00:43:06,600


288
00:43:09,030 --> 00:43:14,010


289
00:43:14,010 --> 00:43:19,670


290
00:43:19,670 --> 00:43:26,370


291
00:43:26,370 --> 00:43:31,860


292
00:43:31,860 --> 00:43:35,010


293
00:43:35,010 --> 00:43:39,570


294
00:43:39,570 --> 00:43:45,540


295
00:43:45,540 --> 00:43:48,870


296
00:43:48,870 --> 00:43:54,600


297
00:43:54,600 --> 00:43:58,080


298
00:43:58,080 --> 00:44:03,630


299
00:44:03,630 --> 00:44:09,240


300
00:44:10,350 --> 00:44:14,310


301
00:44:14,310 --> 00:44:18,710


302
00:44:18,710 --> 00:44:23,400


303
00:44:23,400 --> 00:44:27,720


304
00:44:29,880 --> 00:44:33,540


305
00:44:33,540 --> 00:44:36,990


306
00:44:36,990 --> 00:44:41,610


307
00:44:41,610 --> 00:44:46,290


308
00:44:46,290 --> 00:44:51,990


309
00:44:51,990 --> 00:44:57,150


310
00:44:57,150 --> 00:45:01,020


311
00:45:01,020 --> 00:45:05,010


312
00:45:05,010 --> 00:45:10,350


313
00:45:13,140 --> 00:45:18,990


314
00:45:18,990 --> 00:45:24,450


315
00:45:24,450 --> 00:45:30,180


316
00:45:30,180 --> 00:45:33,870


317
00:45:33,870 --> 00:45:39,180


318
00:45:39,180 --> 00:45:44,760


319
00:45:44,760 --> 00:45:49,380


320
00:45:49,380 --> 00:45:55,890


321
00:45:57,450 --> 00:46:02,610


322
00:46:02,610 --> 00:46:07,080


323
00:46:07,080 --> 00:46:10,800


324
00:46:10,800 --> 00:46:15,570


325
00:46:15,570 --> 00:46:20,460


326
00:46:20,460 --> 00:46:26,520


327
00:46:26,520 --> 00:46:30,780


328
00:46:30,780 --> 00:46:36,180


329
00:46:38,190 --> 00:46:43,890


330
00:46:43,890 --> 00:46:48,700


331
00:46:48,700 --> 00:46:53,040


332
00:46:53,040 --> 00:46:57,700


333
00:46:57,700 --> 00:47:02,619


334
00:47:02,619 --> 00:47:08,680


335
00:47:10,510 --> 00:47:14,349


336
00:47:14,349 --> 00:47:21,190


337
00:47:21,190 --> 00:47:26,530


338
00:47:26,530 --> 00:47:30,490


339
00:47:33,010 --> 00:47:37,660


340
00:47:40,089 --> 00:47:45,130


341
00:47:45,130 --> 00:47:52,180


342
00:47:53,799 --> 00:48:00,430


343
00:48:00,430 --> 00:48:05,140


344
00:48:05,140 --> 00:48:10,690


345
00:48:10,690 --> 00:48:15,700


346
00:48:18,579 --> 00:48:22,390


347
00:48:24,579 --> 00:48:29,799


348
00:48:29,799 --> 00:48:35,530


349
00:48:35,530 --> 00:48:41,619


350
00:48:41,619 --> 00:48:46,119


351
00:48:46,119 --> 00:48:50,170


352
00:48:50,170 --> 00:48:54,460


353
00:48:54,460 --> 00:48:58,569


354
00:48:58,569 --> 00:49:02,500


355
00:49:02,500 --> 00:49:08,710


356
00:49:08,710 --> 00:49:14,680


357
00:49:14,680 --> 00:49:21,130


358
00:49:21,130 --> 00:49:28,030


359
00:49:28,030 --> 00:49:33,790


360
00:49:35,200 --> 00:49:40,420


361
00:49:40,420 --> 00:49:43,480


362
00:49:43,480 --> 00:49:47,410


363
00:49:47,410 --> 00:49:52,480


364
00:49:52,480 --> 00:49:58,060


365
00:49:58,060 --> 00:50:03,490


366
00:50:03,490 --> 00:50:08,950


367
00:50:08,950 --> 00:50:21,070


368
00:50:21,070 --> 00:50:26,890


369
00:50:29,170 --> 00:50:32,230


370
00:50:32,230 --> 00:50:36,880


371
00:50:36,880 --> 00:50:44,710


372
00:50:44,710 --> 00:50:51,310


373
00:50:51,310 --> 00:50:55,290


374
00:50:55,290 --> 00:51:01,360


375
00:51:01,360 --> 00:51:09,640


376
00:51:13,060 --> 00:51:16,089


377
00:51:16,089 --> 00:51:22,449


378
00:51:22,449 --> 00:51:25,900


379
00:51:25,900 --> 00:51:32,170


380
00:51:32,170 --> 00:51:36,489


381
00:51:36,489 --> 00:51:42,400


382
00:51:42,400 --> 00:51:52,299


383
00:51:52,299 --> 00:51:58,299


384
00:51:58,299 --> 00:52:05,170


385
00:52:05,170 --> 00:52:10,119


386
00:52:10,119 --> 00:52:16,630


387
00:52:16,630 --> 00:52:22,029


388
00:52:22,029 --> 00:52:28,239


389
00:52:28,239 --> 00:52:35,249


390
00:52:37,989 --> 00:52:41,319


391
00:52:41,319 --> 00:52:47,049


392
00:52:47,049 --> 00:52:54,670


393
00:52:54,670 --> 00:53:04,420


394
00:53:04,420 --> 00:53:08,859


395
00:53:08,859 --> 00:53:14,769


396
00:53:14,769 --> 00:53:22,359


397
00:53:22,359 --> 00:53:28,990


398
00:53:28,990 --> 00:53:38,500


399
00:53:38,500 --> 00:53:46,000


400
00:53:46,000 --> 00:53:52,240


401
00:53:52,240 --> 00:53:59,230


402
00:53:59,230 --> 00:54:07,060


403
00:54:07,060 --> 00:54:13,750


404
00:54:13,750 --> 00:54:17,710


405
00:54:17,710 --> 00:54:25,480


406
00:54:25,480 --> 00:54:32,920


407
00:54:32,920 --> 00:54:36,610


408
00:54:36,610 --> 00:54:40,930


409
00:54:42,970 --> 00:54:50,490


410
00:54:50,490 --> 00:54:57,370


411
00:54:57,370 --> 00:55:03,560


412
00:55:03,560 --> 00:55:09,290


413
00:55:09,290 --> 00:55:15,920


414
00:55:15,920 --> 00:55:20,750


415
00:55:20,750 --> 00:55:28,670


416
00:55:28,670 --> 00:55:35,210


417
00:55:35,210 --> 00:55:41,540


418
00:55:41,540 --> 00:55:50,060


419
00:55:50,060 --> 00:55:54,230


420
00:55:54,230 --> 00:55:59,870


421
00:55:59,870 --> 00:56:07,220


422
00:56:07,220 --> 00:56:13,490


423
00:56:13,490 --> 00:56:19,700


424
00:56:19,700 --> 00:56:23,990


425
00:56:23,990 --> 00:56:30,680


426
00:56:30,680 --> 00:56:40,010


427
00:56:40,010 --> 00:56:44,150


428
00:56:44,150 --> 00:56:48,680


429
00:56:50,810 --> 00:56:59,210


430
00:56:59,210 --> 00:57:02,080


431
00:57:02,200 --> 00:57:09,849


432
00:57:09,849 --> 00:57:17,710


433
00:57:17,710 --> 00:57:23,589


434
00:57:23,589 --> 00:57:28,930


435
00:57:28,930 --> 00:57:34,540


436
00:57:34,540 --> 00:57:38,589


437
00:57:38,589 --> 00:57:44,109


438
00:57:44,109 --> 00:57:48,430


439
00:57:48,430 --> 00:57:58,599


440
00:57:58,599 --> 00:58:09,510


441
00:58:09,510 --> 00:58:19,119


442
00:58:19,119 --> 00:58:22,420


443
00:58:22,420 --> 00:58:28,000


444
00:58:28,000 --> 00:58:35,530


445
00:58:35,530 --> 00:58:40,720


446
00:58:42,670 --> 00:58:47,140


447
00:58:47,140 --> 00:58:54,160


448
00:58:54,160 --> 00:58:58,990


449
00:58:58,990 --> 00:59:01,930


450
00:59:01,930 --> 00:59:06,390


451
00:59:06,390 --> 00:59:09,760


452
00:59:09,760 --> 00:59:14,470


453
00:59:15,800 --> 00:59:19,550


454
00:59:19,550 --> 00:59:23,090


455
00:59:23,090 --> 00:59:27,730


456
00:59:27,730 --> 00:59:33,170


457
00:59:33,170 --> 00:59:38,900


458
00:59:38,900 --> 00:59:44,720


459
00:59:48,710 --> 00:59:54,740


460
00:59:59,300 --> 01:00:02,540


461
01:00:02,540 --> 01:00:08,510


462
01:00:08,510 --> 01:00:15,250


463
01:00:15,250 --> 01:00:25,100


464
01:00:25,100 --> 01:00:30,650


465
01:00:30,650 --> 01:00:35,930


466
01:00:40,640 --> 01:00:45,680


467
01:00:45,680 --> 01:00:52,940


468
01:00:52,940 --> 01:00:57,830


469
01:00:57,830 --> 01:01:07,670


470
01:01:07,670 --> 01:01:13,730


471
01:01:13,730 --> 01:01:17,930


472
01:01:17,930 --> 01:01:26,150


473
01:01:26,150 --> 01:01:30,400


474
01:01:30,400 --> 01:01:36,520


475
01:01:36,520 --> 01:01:43,569


476
01:01:43,569 --> 01:01:49,180


477
01:01:49,180 --> 01:01:57,359


478
01:01:57,359 --> 01:02:02,560


479
01:02:02,560 --> 01:02:06,780


480
01:02:06,780 --> 01:02:13,690


481
01:02:13,690 --> 01:02:19,030


482
01:02:19,030 --> 01:02:24,160


483
01:02:26,319 --> 01:02:33,460


484
01:02:33,460 --> 01:02:38,050


485
01:02:38,050 --> 01:02:43,000


486
01:02:43,000 --> 01:02:52,150


487
01:02:52,150 --> 01:02:58,119


488
01:02:58,119 --> 01:03:02,890


489
01:03:04,900 --> 01:03:10,180


490
01:03:12,790 --> 01:03:16,930


491
01:03:16,930 --> 01:03:22,300


492
01:03:22,300 --> 01:03:28,150


493
01:03:28,150 --> 01:03:35,650


494
01:03:35,650 --> 01:03:40,440


495
01:03:40,670 --> 01:03:45,619


496
01:03:45,619 --> 01:03:49,490


497
01:03:51,980 --> 01:03:57,079


498
01:03:57,079 --> 01:04:03,290


499
01:04:03,290 --> 01:04:09,920


500
01:04:09,920 --> 01:04:15,049


501
01:04:15,049 --> 01:04:20,540


502
01:04:20,540 --> 01:04:25,280


503
01:04:25,280 --> 01:04:31,750


504
01:04:31,750 --> 01:04:39,710


505
01:04:39,710 --> 01:04:46,250


506
01:04:46,250 --> 01:04:53,180


507
01:04:53,180 --> 01:05:03,319


508
01:05:03,319 --> 01:05:09,380


509
01:05:09,380 --> 01:05:13,700


510
01:05:15,470 --> 01:05:20,059


511
01:05:20,059 --> 01:05:26,049


512
01:05:26,049 --> 01:05:32,210


513
01:05:32,210 --> 01:05:40,280


514
01:05:40,280 --> 01:05:44,960


515
01:05:44,960 --> 01:05:52,160


516
01:05:52,160 --> 01:05:57,440


517
01:05:57,440 --> 01:06:02,989


518
01:06:02,989 --> 01:06:06,950


519
01:06:06,950 --> 01:06:11,749


520
01:06:11,749 --> 01:06:17,779


521
01:06:17,779 --> 01:06:23,059


522
01:06:23,059 --> 01:06:27,529


523
01:06:27,529 --> 01:06:34,099


524
01:06:34,099 --> 01:06:38,499


525
01:06:42,559 --> 01:06:48,619


526
01:06:48,619 --> 01:06:55,460


527
01:06:55,460 --> 01:06:59,630


528
01:06:59,630 --> 01:07:05,960


529
01:07:05,960 --> 01:07:11,420


530
01:07:11,420 --> 01:07:17,660


531
01:07:17,660 --> 01:07:23,719


532
01:07:23,719 --> 01:07:27,380


533
01:07:27,380 --> 01:07:32,779


534
01:07:32,779 --> 01:07:40,910


535
01:07:40,910 --> 01:07:45,440


536
01:07:45,440 --> 01:07:48,410


537
01:07:48,410 --> 01:07:53,029


538
01:07:53,029 --> 01:08:02,239


539
01:08:02,239 --> 01:08:06,890


540
01:08:06,890 --> 01:08:10,300


541
01:08:10,300 --> 01:08:15,940


542
01:08:15,940 --> 01:08:19,870


543
01:08:19,870 --> 01:08:23,230


544
01:08:23,229 --> 01:08:26,469


545
01:08:26,470 --> 01:08:29,050


546
01:08:29,050 --> 01:08:33,070


547
01:08:35,350 --> 01:08:39,760


548
01:08:39,760 --> 01:08:50,310


549
01:08:50,310 --> 01:09:00,339


550
01:09:02,290 --> 01:09:07,180


551
01:09:07,180 --> 01:09:11,770


552
01:09:11,770 --> 01:09:17,920


553
01:09:17,920 --> 01:09:23,970


554
01:09:23,970 --> 01:09:36,460


555
01:09:36,460 --> 01:09:44,740


556
01:09:44,740 --> 01:09:50,370


557
01:09:50,370 --> 01:09:57,130


558
01:09:57,130 --> 01:10:04,030


559
01:10:04,030 --> 01:10:09,790


560
01:10:09,790 --> 01:10:14,680


561
01:10:14,680 --> 01:10:19,810


562
01:10:19,810 --> 01:10:23,150


563
01:10:27,110 --> 01:10:40,190


564
01:10:40,190 --> 01:10:48,190


565
01:10:48,190 --> 01:10:56,539


566
01:10:56,539 --> 01:11:02,030


567
01:11:02,030 --> 01:11:06,199


568
01:11:06,199 --> 01:11:10,820


569
01:11:10,820 --> 01:11:16,989


570
01:11:16,989 --> 01:11:23,150


571
01:11:23,150 --> 01:11:32,300


572
01:11:32,300 --> 01:11:37,039


573
01:11:37,039 --> 01:11:40,340


574
01:11:40,340 --> 01:11:44,479


575
01:11:44,479 --> 01:11:48,249


576
01:11:50,510 --> 01:11:55,969


577
01:11:55,969 --> 01:12:01,400


578
01:12:01,400 --> 01:12:07,449


579
01:12:07,449 --> 01:12:16,340


580
01:12:16,340 --> 01:12:23,630


581
01:12:23,630 --> 01:12:29,780


582
01:12:29,780 --> 01:12:32,920


583
01:12:33,070 --> 01:12:39,260


584
01:12:39,260 --> 01:12:44,230


585
01:12:45,590 --> 01:12:55,230


586
01:12:58,619 --> 01:13:04,500


587
01:13:04,500 --> 01:13:09,840


588
01:13:09,840 --> 01:13:13,340


589
01:13:13,829 --> 01:13:18,210


590
01:13:18,210 --> 01:13:22,139


591
01:13:22,139 --> 01:13:29,179


592
01:13:29,179 --> 01:13:34,769


593
01:13:34,769 --> 01:13:39,599


594
01:13:39,599 --> 01:13:45,570


595
01:13:45,570 --> 01:13:51,269


596
01:13:51,269 --> 01:13:54,749


597
01:13:54,749 --> 01:14:00,239


598
01:14:00,239 --> 01:14:04,979


599
01:14:04,979 --> 01:14:10,320


600
01:14:12,300 --> 01:14:19,289


601
01:14:19,289 --> 01:14:24,869


602
01:14:24,869 --> 01:14:29,550


603
01:14:29,550 --> 01:14:35,729


604
01:14:35,729 --> 01:14:43,289


605
01:14:46,139 --> 01:14:53,489


606
01:14:54,960 --> 01:14:59,940


607
01:14:59,940 --> 01:15:06,090


608
01:15:06,090 --> 01:15:10,170


609
01:15:10,170 --> 01:15:16,199


610
01:15:18,630 --> 01:15:23,280


611
01:15:23,280 --> 01:15:26,670


612
01:15:26,670 --> 01:15:29,610


613
01:15:29,610 --> 01:15:37,470


614
01:15:37,470 --> 01:15:41,760


615
01:15:41,760 --> 01:15:46,500


616
01:15:46,500 --> 01:15:51,420


617
01:15:51,420 --> 01:15:58,650


618
01:15:58,650 --> 01:16:03,450


619
01:16:03,450 --> 01:16:08,670


620
01:16:08,670 --> 01:16:19,530


621
01:16:19,530 --> 01:16:33,090


622
01:16:33,090 --> 01:16:37,260


623
01:16:37,260 --> 01:16:41,010


624
01:16:41,010 --> 01:16:45,360


625
01:16:50,820 --> 01:16:57,480


626
01:16:57,480 --> 01:17:03,390


627
01:17:03,390 --> 01:17:14,370


628
01:17:14,370 --> 01:17:21,450


629
01:17:21,450 --> 01:17:25,140


630
01:17:25,140 --> 01:17:31,650


631
01:17:33,780 --> 01:17:38,260


632
01:17:38,260 --> 01:17:44,590


633
01:17:44,590 --> 01:17:49,450


634
01:17:49,450 --> 01:17:52,630


635
01:17:52,630 --> 01:17:58,210


636
01:17:58,210 --> 01:18:02,710


637
01:18:02,710 --> 01:18:05,320


638
01:18:05,320 --> 01:18:10,480


639
01:18:10,480 --> 01:18:15,850


640
01:18:15,850 --> 01:18:28,120


641
01:18:32,340 --> 01:18:37,830


642
01:18:37,830 --> 01:18:43,860


643
01:18:43,860 --> 01:18:51,460


644
01:18:51,460 --> 01:18:56,890


645
01:18:56,890 --> 01:19:04,840


646
01:19:04,840 --> 01:19:11,050


647
01:19:11,050 --> 01:19:16,510


648
01:19:16,510 --> 01:19:20,739


649
01:19:23,110 --> 01:19:28,420


650
01:19:28,420 --> 01:19:33,100


651
01:19:33,100 --> 01:19:39,190


652
01:19:41,140 --> 01:19:47,140


653
01:19:47,140 --> 01:19:53,680


654
01:19:53,680 --> 01:19:57,700


655
01:20:00,100 --> 01:20:07,510


656
01:20:07,510 --> 01:20:12,610


657
01:20:14,980 --> 01:20:22,600


658
01:20:22,600 --> 01:20:31,180


659
01:20:31,180 --> 01:20:34,780


660
01:20:37,600 --> 01:20:43,230


661
01:20:45,419 --> 01:20:48,840


662
01:20:48,840 --> 01:20:53,010


663
01:20:53,010 --> 01:20:57,119


664
01:21:00,419 --> 01:21:08,189


665
01:21:08,189 --> 01:21:13,229


666
01:21:13,229 --> 01:21:19,769


667
01:21:19,769 --> 01:21:25,559


668
01:21:25,559 --> 01:21:30,389


669
01:21:30,389 --> 01:21:34,260


670
01:21:34,260 --> 01:21:39,719


671
01:21:39,719 --> 01:21:44,880


672
01:21:44,880 --> 01:21:50,999


673
01:21:50,999 --> 01:21:56,969


674
01:21:56,969 --> 01:22:02,550


675
01:22:02,550 --> 01:22:09,840


676
01:22:09,840 --> 01:22:15,689


677
01:22:15,689 --> 01:22:21,749


678
01:22:23,610 --> 01:22:28,079


679
01:22:28,079 --> 01:22:34,559


680
01:22:34,559 --> 01:22:39,419


681
01:22:39,419 --> 01:22:46,229


682
01:22:46,229 --> 01:22:49,590


683
01:22:49,590 --> 01:22:55,249


684
01:22:55,249 --> 01:23:00,550


685
01:23:00,550 --> 01:23:05,590


686
01:23:05,590 --> 01:23:08,560


687
01:23:08,560 --> 01:23:15,940


688
01:23:21,880 --> 01:23:25,600


689
01:23:25,600 --> 01:23:29,770


690
01:23:29,770 --> 01:23:40,690


691
01:23:43,150 --> 01:23:48,370


692
01:23:48,370 --> 01:23:55,180


693
01:23:55,180 --> 01:24:04,050


694
01:24:04,050 --> 01:24:12,160


695
01:24:12,160 --> 01:24:16,420


696
01:24:16,420 --> 01:24:21,610


697
01:24:21,610 --> 01:24:27,220


698
01:24:27,220 --> 01:24:29,800


699
01:24:29,800 --> 01:24:35,140


700
01:24:35,140 --> 01:24:39,670


701
01:24:39,670 --> 01:24:45,070


702
01:24:45,070 --> 01:24:50,620


703
01:24:50,620 --> 01:24:55,630


704
01:24:55,630 --> 01:25:01,690


705
01:25:05,670 --> 01:25:11,130


706
01:25:11,130 --> 01:25:16,290


707
01:25:16,290 --> 01:25:23,340


708
01:25:23,340 --> 01:25:28,440


709
01:25:32,429 --> 01:25:37,650


710
01:25:37,650 --> 01:25:43,230


711
01:25:43,230 --> 01:25:48,360


712
01:25:48,360 --> 01:25:53,310


713
01:25:53,310 --> 01:25:58,080


714
01:26:00,300 --> 01:26:04,650


715
01:26:08,429 --> 01:26:12,900


716
01:26:12,900 --> 01:26:20,219


717
01:26:20,219 --> 01:26:25,560


718
01:26:25,560 --> 01:26:30,480


719
01:26:32,159 --> 01:26:37,260


720
01:26:37,260 --> 01:26:42,719


721
01:26:42,719 --> 01:26:47,880


722
01:26:47,880 --> 01:26:51,989


723
01:26:54,480 --> 01:26:57,480


724
01:26:57,480 --> 01:27:02,550


725
01:27:02,550 --> 01:27:07,350


726
01:27:07,350 --> 01:27:13,290


727
01:27:13,290 --> 01:27:18,800


728
01:27:18,800 --> 01:27:23,070


729
01:27:24,829 --> 01:27:31,489


730
01:27:31,489 --> 01:27:38,329


731
01:27:38,329 --> 01:27:42,349


732
01:27:42,349 --> 01:27:49,880


733
01:27:49,880 --> 01:27:53,960


734
01:27:53,960 --> 01:28:00,559


735
01:28:00,559 --> 01:28:05,690


736
01:28:08,090 --> 01:28:15,619


737
01:28:17,780 --> 01:28:20,960


738
01:28:20,960 --> 01:28:25,360


739
01:28:25,360 --> 01:28:34,099


740
01:28:34,099 --> 01:28:40,239


741
01:28:41,570 --> 01:28:47,840


742
01:28:47,840 --> 01:28:52,099


743
01:28:52,099 --> 01:28:57,710


744
01:28:57,710 --> 01:29:07,040


745
01:29:07,040 --> 01:29:15,829


746
01:29:15,829 --> 01:29:21,559


747
01:29:21,559 --> 01:29:25,489


748
01:29:27,440 --> 01:29:31,190


749
01:29:31,190 --> 01:29:36,790


750
01:29:36,790 --> 01:29:42,599


751
01:29:42,599 --> 01:29:51,869


752
01:29:53,219 --> 01:30:01,080


753
01:30:01,080 --> 01:30:07,230


754
01:30:07,230 --> 01:30:12,599


755
01:30:12,599 --> 01:30:18,869


756
01:30:22,940 --> 01:30:29,699


757
01:30:29,699 --> 01:30:34,139


758
01:30:34,139 --> 01:30:39,119


759
01:30:39,119 --> 01:30:44,489


760
01:30:44,489 --> 01:30:50,040


761
01:30:50,040 --> 01:30:56,940


762
01:30:56,940 --> 01:31:03,540


763
01:31:03,540 --> 01:31:08,670


764
01:31:08,670 --> 01:31:12,179


765
01:31:12,179 --> 01:31:16,110


766
01:31:16,110 --> 01:31:21,320


767
01:31:21,680 --> 01:31:28,250


768
01:31:28,250 --> 01:31:36,530


769
01:31:36,530 --> 01:31:40,700


770
01:31:40,700 --> 01:31:48,710


771
01:31:48,710 --> 01:31:56,420


772
01:31:56,420 --> 01:32:01,160


773
01:32:01,160 --> 01:32:04,850


774
01:32:04,850 --> 01:32:11,680


775
01:32:11,680 --> 01:32:17,750


776
01:32:17,750 --> 01:32:23,270


777
01:32:23,270 --> 01:32:27,860


778
01:32:30,050 --> 01:32:34,160


779
01:32:34,160 --> 01:32:40,040


780
01:32:40,040 --> 01:32:45,350


781
01:32:45,350 --> 01:32:51,080


782
01:32:51,080 --> 01:32:59,000


783
01:32:59,000 --> 01:33:07,940


784
01:33:07,940 --> 01:33:24,200


785
01:33:24,200 --> 01:33:29,670


786
01:33:29,670 --> 01:33:33,110


787
01:33:35,450 --> 01:33:44,250


788
01:33:44,250 --> 01:33:49,650


789
01:33:49,650 --> 01:33:56,070


790
01:33:56,070 --> 01:34:02,970


791
01:34:02,970 --> 01:34:08,670


792
01:34:08,670 --> 01:34:12,930


793
01:34:12,930 --> 01:34:15,840


794
01:34:15,840 --> 01:34:19,710


795
01:34:19,710 --> 01:34:22,830


796
01:34:22,830 --> 01:34:27,990


797
01:34:27,990 --> 01:34:33,300


798
01:34:33,300 --> 01:34:41,010


799
01:34:41,010 --> 01:34:46,350


800
01:34:46,350 --> 01:34:52,170


801
01:34:52,170 --> 01:34:56,370


802
01:34:56,370 --> 01:35:02,580


803
01:35:02,580 --> 01:35:07,770


804
01:35:07,770 --> 01:35:14,130


805
01:35:14,130 --> 01:35:18,530


806
01:35:18,530 --> 01:35:25,650


807
01:35:25,650 --> 01:35:32,690


808
01:35:32,690 --> 01:35:37,170


809
01:35:37,170 --> 01:35:44,910


810
01:35:44,910 --> 01:35:48,270


811
01:35:48,270 --> 01:35:52,620


812
01:35:54,360 --> 01:36:00,060


813
01:36:00,060 --> 01:36:04,980


814
01:36:07,440 --> 01:36:12,000


815
01:36:12,000 --> 01:36:17,760


816
01:36:17,760 --> 01:36:23,480


817
01:36:25,920 --> 01:36:31,260


818
01:36:31,260 --> 01:36:39,870


819
01:36:39,870 --> 01:36:44,460


820
01:36:44,460 --> 01:36:49,890


821
01:36:49,890 --> 01:36:57,530


822
01:37:00,210 --> 01:37:04,920


823
01:37:04,920 --> 01:37:13,410


824
01:37:13,410 --> 01:37:17,280


825
01:37:17,280 --> 01:37:25,920


826
01:37:25,920 --> 01:37:30,390


827
01:37:30,390 --> 01:37:38,090


828
01:37:38,090 --> 01:37:44,190


829
01:37:47,190 --> 01:37:52,410


830
01:37:52,410 --> 01:37:58,140


831
01:37:58,140 --> 01:38:04,620


832
01:38:04,620 --> 01:38:09,120


833
01:38:09,120 --> 01:38:14,820


834
01:38:14,820 --> 01:38:21,840


835
01:38:21,840 --> 01:38:25,950


836
01:38:25,950 --> 01:38:30,090


837
01:38:30,090 --> 01:38:35,300


838
01:38:35,300 --> 01:38:39,440


839
01:38:42,150 --> 01:38:51,140


840
01:38:51,200 --> 01:38:59,160


841
01:38:59,160 --> 01:39:07,650


842
01:39:07,650 --> 01:39:12,810


843
01:39:12,810 --> 01:39:17,130


844
01:39:17,130 --> 01:39:20,300


845
01:39:21,510 --> 01:39:25,710


846
01:39:25,710 --> 01:39:29,699


847
01:39:29,699 --> 01:39:35,099


848
01:39:35,099 --> 01:39:41,659


849
01:39:45,989 --> 01:39:51,300


850
01:39:51,300 --> 01:39:57,150


851
01:40:01,320 --> 01:40:08,400


852
01:40:08,400 --> 01:40:14,070


853
01:40:14,070 --> 01:40:19,079


854
01:40:19,079 --> 01:40:23,280


855
01:40:23,280 --> 01:40:27,300


856
01:40:27,300 --> 01:40:34,409


857
01:40:36,809 --> 01:40:40,440


858
01:40:44,219 --> 01:40:48,389


859
01:40:48,389 --> 01:40:53,880


860
01:40:53,880 --> 01:41:05,119


861
01:41:05,119 --> 01:41:13,980


862
01:41:13,980 --> 01:41:19,170


863
01:41:19,170 --> 01:41:21,840


864
01:41:21,840 --> 01:41:24,900


865
01:41:26,880 --> 01:41:32,570


866
01:41:33,980 --> 01:41:39,400


867
01:41:39,400 --> 01:41:47,090


868
01:41:47,090 --> 01:41:51,140


869
01:41:51,140 --> 01:41:54,260


870
01:41:54,260 --> 01:41:59,390


871
01:41:59,390 --> 01:42:04,370


872
01:42:04,370 --> 01:42:11,540


873
01:42:11,540 --> 01:42:15,140


874
01:42:15,140 --> 01:42:19,700


875
01:42:21,739 --> 01:42:28,730


876
01:42:28,730 --> 01:42:33,110


877
01:42:33,110 --> 01:42:38,120


878
01:42:38,120 --> 01:42:47,270


879
01:42:47,270 --> 01:42:55,540


880
01:42:57,320 --> 01:43:08,690


881
01:43:08,690 --> 01:43:13,400


882
01:43:13,400 --> 01:43:19,340


883
01:43:19,340 --> 01:43:25,970


884
01:43:25,970 --> 01:43:30,530


885
01:43:33,380 --> 01:43:38,930


886
01:43:38,930 --> 01:43:44,290


887
01:43:46,710 --> 01:43:54,490


888
01:43:54,490 --> 01:44:00,580


889
01:44:00,580 --> 01:44:06,970


890
01:44:06,970 --> 01:44:15,940


891
01:44:18,520 --> 01:44:26,470


892
01:44:26,470 --> 01:44:32,890


893
01:44:32,890 --> 01:44:38,140


894
01:44:38,140 --> 01:44:47,080


895
01:44:47,080 --> 01:44:52,180


896
01:44:52,180 --> 01:44:58,390


897
01:44:58,390 --> 01:45:05,350


898
01:45:05,350 --> 01:45:09,100


899
01:45:09,100 --> 01:45:13,510


900
01:45:13,510 --> 01:45:19,690


901
01:45:23,650 --> 01:45:28,690


902
01:45:28,690 --> 01:45:34,210


903
01:45:34,210 --> 01:45:40,870


904
01:45:40,870 --> 01:45:48,240


905
01:45:48,240 --> 01:45:55,170


906
01:45:55,170 --> 01:46:05,119


907
01:46:05,119 --> 01:46:15,439


908
01:46:15,439 --> 01:46:21,229


909
01:46:21,229 --> 01:46:26,300


910
01:46:26,300 --> 01:46:34,570


911
01:46:36,050 --> 01:46:44,560


912
01:46:45,869 --> 01:46:53,440


913
01:46:53,440 --> 01:47:01,960


914
01:47:01,960 --> 01:47:05,440


915
01:47:05,440 --> 01:47:08,949


916
01:47:08,949 --> 01:47:15,880


917
01:47:15,880 --> 01:47:19,869


918
01:47:19,869 --> 01:47:22,659


919
01:47:22,659 --> 01:47:34,059


920
01:47:34,059 --> 01:47:39,659


921
01:47:42,989 --> 01:47:50,920


922
01:47:50,920 --> 01:47:55,960


923
01:47:55,960 --> 01:48:01,599


924
01:48:01,599 --> 01:48:07,119


925
01:48:10,840 --> 01:48:16,210


926
01:48:16,210 --> 01:48:23,769


927
01:48:23,769 --> 01:48:27,519


928
01:48:27,519 --> 01:48:33,820


929
01:48:36,190 --> 01:48:42,969


930
01:48:42,969 --> 01:48:50,309


931
01:48:50,309 --> 01:48:56,920


932
01:48:56,920 --> 01:49:02,530


933
01:49:02,530 --> 01:49:08,380


934
01:49:08,380 --> 01:49:16,830


935
01:49:16,830 --> 01:49:22,960


936
01:49:22,960 --> 01:49:28,270


937
01:49:28,270 --> 01:49:34,690


938
01:49:37,420 --> 01:49:42,730


939
01:49:45,460 --> 01:49:52,150


940
01:49:52,150 --> 01:50:00,219


941
01:50:00,219 --> 01:50:03,989


942
01:50:07,300 --> 01:50:13,960


943
01:50:13,960 --> 01:50:18,250


944
01:50:18,250 --> 01:50:22,449


945
01:50:22,449 --> 01:50:28,179


946
01:50:28,179 --> 01:50:34,960


947
01:50:34,960 --> 01:50:40,270


948
01:50:40,270 --> 01:50:48,190


949
01:50:49,719 --> 01:50:53,890


950
01:50:53,890 --> 01:50:57,610


951
01:51:00,910 --> 01:51:05,290


952
01:51:05,290 --> 01:51:09,190


953
01:51:09,190 --> 01:51:13,250


954
01:51:13,250 --> 01:51:19,969


955
01:51:19,969 --> 01:51:24,050


956
01:51:24,050 --> 01:51:28,840


957
01:51:28,840 --> 01:51:34,369


958
01:51:35,809 --> 01:51:41,900


959
01:51:46,909 --> 01:51:54,349


960
01:51:54,349 --> 01:52:02,869


961
01:52:09,619 --> 01:52:19,699


962
01:52:19,699 --> 01:52:24,320


963
01:52:24,320 --> 01:52:29,750


964
01:52:29,750 --> 01:52:34,730


965
01:52:34,730 --> 01:52:41,329


966
01:52:41,329 --> 01:52:49,250


967
01:52:49,250 --> 01:52:52,670


968
01:52:52,670 --> 01:52:58,610


969
01:52:58,610 --> 01:53:03,559


970
01:53:03,559 --> 01:53:13,489


971
01:53:18,019 --> 01:53:24,070


972
01:53:27,010 --> 01:53:33,099


973
01:53:33,099 --> 01:53:40,539


974
01:53:40,539 --> 01:53:46,780


975
01:53:46,780 --> 01:53:50,170


976
01:53:50,170 --> 01:53:54,070


977
01:53:54,070 --> 01:53:59,289


978
01:53:59,289 --> 01:54:03,880


979
01:54:03,880 --> 01:54:08,860


980
01:54:08,860 --> 01:54:17,499


981
01:54:17,499 --> 01:54:23,230


982
01:54:23,230 --> 01:54:27,039


983
01:54:27,039 --> 01:54:33,429


984
01:54:33,429 --> 01:54:39,249


985
01:54:39,249 --> 01:54:47,079


986
01:54:47,079 --> 01:54:51,280


987
01:54:51,280 --> 01:54:54,909


988
01:54:54,909 --> 01:55:04,030


989
01:55:04,030 --> 01:55:08,409


990
01:55:08,409 --> 01:55:14,949


991
01:55:14,949 --> 01:55:19,389


992
01:55:19,389 --> 01:55:22,659


993
01:55:24,579 --> 01:55:28,150


994
01:55:28,150 --> 01:55:31,230


995
01:55:35,349 --> 01:55:40,729


996
01:55:40,729 --> 01:55:46,550


997
01:55:46,550 --> 01:55:50,689


998
01:55:50,689 --> 01:55:55,579


999
01:55:57,889 --> 01:56:03,679


1000
01:56:03,679 --> 01:56:10,219


1001
01:56:10,219 --> 01:56:14,929


1002
01:56:14,929 --> 01:56:19,669


1003
01:56:19,669 --> 01:56:24,019


1004
01:56:24,019 --> 01:56:26,630


1005
01:56:26,630 --> 01:56:30,469


1006
01:56:30,469 --> 01:56:33,860


1007
01:56:33,860 --> 01:56:38,869


1008
01:56:38,869 --> 01:56:43,999


1009
01:56:43,999 --> 01:56:54,229


1010
01:56:54,229 --> 01:57:02,479


1011
01:57:02,479 --> 01:57:09,590


1012
01:57:09,590 --> 01:57:14,419


1013
01:57:14,419 --> 01:57:21,919


1014
01:57:21,919 --> 01:57:27,110


1015
01:57:27,110 --> 01:57:33,260


1016
01:57:33,260 --> 01:57:38,449


1017
01:57:41,869 --> 01:57:46,820


1018
01:57:46,820 --> 01:57:50,900


1019
01:57:50,900 --> 01:57:56,260


1020
01:57:56,260 --> 01:58:04,280


1021
01:58:07,580 --> 01:58:13,130


1022
01:58:13,130 --> 01:58:18,290


1023
01:58:18,290 --> 01:58:23,660


1024
01:58:23,660 --> 01:58:29,200


1025
01:58:29,200 --> 01:58:35,240


1026
01:58:35,240 --> 01:58:39,200


1027
01:58:39,200 --> 01:58:47,870


1028
01:58:47,870 --> 01:58:54,080


1029
01:58:54,080 --> 01:59:00,770


1030
01:59:00,770 --> 01:59:06,260


1031
01:59:06,260 --> 01:59:12,650


1032
01:59:14,030 --> 01:59:18,260


1033
01:59:18,260 --> 01:59:22,910


1034
01:59:22,910 --> 01:59:26,450


1035
01:59:26,450 --> 01:59:30,560


1036
01:59:30,560 --> 01:59:35,530


1037
01:59:38,250 --> 01:59:44,440


1038
01:59:44,440 --> 01:59:48,160


1039
01:59:48,160 --> 01:59:52,690


1040
01:59:52,690 --> 02:00:02,500


1041
02:00:02,500 --> 02:00:10,300


1042
02:00:10,300 --> 02:00:16,600


1043
02:00:16,600 --> 02:00:21,850


1044
02:00:21,850 --> 02:00:30,130


1045
02:00:30,130 --> 02:00:37,199


1046
02:00:39,960 --> 02:00:45,520


1047
02:00:45,520 --> 02:00:49,449


1048
02:00:51,550 --> 02:00:57,940


1049
02:01:00,480 --> 02:01:05,489


1050
02:01:05,489 --> 02:01:11,770


1051
02:01:11,770 --> 02:01:16,210


1052
02:01:16,210 --> 02:01:21,840


1053
02:01:21,840 --> 02:01:31,199


1054
02:01:34,810 --> 02:01:39,730


1055
02:01:41,590 --> 02:01:46,179


1056
02:01:46,179 --> 02:01:49,719


1057
02:01:49,719 --> 02:01:55,880


1058
02:01:55,880 --> 02:02:01,309


1059
02:02:01,309 --> 02:02:05,749


1060
02:02:05,749 --> 02:02:10,070


1061
02:02:10,070 --> 02:02:14,780


1062
02:02:14,780 --> 02:02:21,130


1063
02:02:21,399 --> 02:02:26,360


1064
02:02:28,099 --> 02:02:32,659


1065
02:02:35,989 --> 02:02:40,099


1066
02:02:40,099 --> 02:02:50,539


1067
02:02:50,539 --> 02:02:53,780


1068
02:02:53,780 --> 02:02:58,579


1069
02:02:58,579 --> 02:03:03,320


1070
02:03:03,320 --> 02:03:10,130


1071
02:03:10,130 --> 02:03:15,769


1072
02:03:15,769 --> 02:03:19,849


1073
02:03:19,849 --> 02:03:24,369


1074
02:03:29,059 --> 02:03:34,639


1075
02:03:34,639 --> 02:03:40,189


1076
02:03:40,189 --> 02:03:45,289


1077
02:03:48,889 --> 02:03:52,849


1078
02:03:52,849 --> 02:03:57,769


1079
02:03:57,769 --> 02:04:04,010


1080
02:04:04,010 --> 02:04:09,560


1081
02:04:09,560 --> 02:04:14,600


1082
02:04:14,600 --> 02:04:18,950


1083
02:04:20,600 --> 02:04:25,000


1084
02:04:25,000 --> 02:04:30,230


1085
02:04:30,230 --> 02:04:36,080


1086
02:04:36,080 --> 02:04:41,630


1087
02:04:41,630 --> 02:04:49,100


1088
02:04:49,100 --> 02:04:54,710


1089
02:04:54,710 --> 02:04:59,240


1090
02:04:59,240 --> 02:05:08,240


1091
02:05:08,240 --> 02:05:13,690


1092
02:05:14,730 --> 02:05:18,020


1093
02:05:18,020 --> 02:05:24,920


1094
02:05:24,920 --> 02:05:30,619


1095
02:05:30,619 --> 02:05:37,340


1096
02:05:37,340 --> 02:05:45,940


1097
02:05:48,949 --> 02:05:54,980


1098
02:05:54,980 --> 02:05:59,030


1099
02:05:59,030 --> 02:06:06,710


1100
02:06:06,710 --> 02:06:10,610


1101
02:06:10,610 --> 02:06:15,500


1102
02:06:15,500 --> 02:06:19,579


1103
02:06:19,579 --> 02:06:24,409


1104
02:06:24,409 --> 02:06:36,159


1105
02:06:36,159 --> 02:06:44,150


1106
02:06:44,150 --> 02:06:49,820


1107
02:06:49,820 --> 02:06:55,639


1108
02:06:55,639 --> 02:07:03,710


1109
02:07:03,710 --> 02:07:08,780


1110
02:07:08,780 --> 02:07:12,440


1111
02:07:12,440 --> 02:07:16,880


1112
02:07:16,880 --> 02:07:23,030


1113
02:07:23,030 --> 02:07:28,460


1114
02:07:28,460 --> 02:07:30,840


1115
02:07:30,840 --> 02:07:34,469


1116
02:07:34,469 --> 02:07:41,520


1117
02:07:41,520 --> 02:07:48,780


1118
02:07:50,909 --> 02:08:04,190


1119
02:08:05,400 --> 02:08:12,270


1120
02:08:12,270 --> 02:08:19,860


1121
02:08:23,429 --> 02:08:26,510


1122
02:08:29,940 --> 02:08:38,320


1123
02:08:38,320 --> 02:08:43,360


1124
02:08:43,360 --> 02:08:47,410


1125
02:08:47,410 --> 02:08:51,760


1126
02:08:51,760 --> 02:08:54,550


1127
02:08:54,550 --> 02:08:59,740


1128
02:08:59,740 --> 02:09:03,400


1129
02:09:03,400 --> 02:09:10,210


1130
02:09:10,210 --> 02:09:12,930


1131
02:09:13,989 --> 02:09:19,239


1132
02:09:19,239 --> 02:09:31,120


1133
02:09:31,120 --> 02:09:35,380


1134
02:09:35,380 --> 02:09:40,540


1135
02:09:40,540 --> 02:09:44,380


1136
02:09:44,380 --> 02:09:48,520


1137
02:09:48,520 --> 02:09:55,180


1138
02:09:55,180 --> 02:09:59,430


1139
02:09:59,430 --> 02:10:05,760


1140
02:10:09,250 --> 02:10:20,710


1141
02:10:20,710 --> 02:10:24,430


1142
02:10:24,430 --> 02:10:30,130


1143
02:10:30,130 --> 02:10:35,530


1144
02:10:35,530 --> 02:10:38,920


1145
02:10:38,920 --> 02:10:43,780


1146
02:10:43,780 --> 02:10:46,360


1147
02:10:46,360 --> 02:10:49,380


1148
02:10:49,380 --> 02:10:59,530


1149
02:10:59,530 --> 02:11:04,300


1150
02:11:04,300 --> 02:11:07,630


1151
02:11:07,630 --> 02:11:12,970


1152
02:11:12,970 --> 02:11:18,460


1153
02:11:18,460 --> 02:11:22,020


1154
02:11:22,740 --> 02:11:26,800


1155
02:11:26,800 --> 02:11:29,950


1156
02:11:29,950 --> 02:11:37,930


1157
02:11:37,930 --> 02:11:42,940


1158
02:11:45,130 --> 02:11:52,180


1159
02:11:52,180 --> 02:11:57,630


1160
02:11:57,630 --> 02:12:01,300


1161
02:12:01,300 --> 02:12:05,800


1162
02:12:05,800 --> 02:12:11,170


1163
02:12:11,170 --> 02:12:16,420


1164
02:12:16,420 --> 02:12:20,770


1165
02:12:20,770 --> 02:12:26,410


1166
02:12:28,420 --> 02:12:32,410


1167
02:12:32,410 --> 02:12:37,540


1168
02:12:37,540 --> 02:12:40,540


1169
02:12:40,540 --> 02:12:45,400


1170
02:12:45,400 --> 02:12:50,650


1171
02:12:50,650 --> 02:12:57,580


1172
02:12:57,580 --> 02:13:01,690


1173
02:13:01,690 --> 02:13:09,400


1174
02:13:09,400 --> 02:13:18,510


1175
02:13:18,510 --> 02:13:25,780


1176
02:13:28,990 --> 02:13:36,160


1177
02:13:36,160 --> 02:13:40,900


1178
02:13:40,900 --> 02:13:48,640


1179
02:13:48,640 --> 02:13:52,300


1180
02:13:52,300 --> 02:13:58,480


1181
02:14:01,390 --> 02:14:08,050


1182
02:14:08,050 --> 02:14:13,150


1183
02:14:15,490 --> 02:14:20,620


1184
02:14:20,620 --> 02:14:26,170


1185
02:14:26,170 --> 02:14:29,770


1186
02:14:29,770 --> 02:14:34,039


1187
02:14:35,839 --> 02:14:43,609


1188
02:14:43,609 --> 02:14:49,849


1189
02:14:49,849 --> 02:14:53,419


1190
02:14:53,419 --> 02:14:58,669


1191
02:14:58,669 --> 02:15:02,899


1192
02:15:02,899 --> 02:15:09,109


1193
02:15:09,109 --> 02:15:13,780


1194
02:15:17,689 --> 02:15:23,659


1195
02:15:26,359 --> 02:15:33,019


1196
02:15:33,019 --> 02:15:39,079


1197
02:15:40,339 --> 02:15:47,479


1198
02:15:47,479 --> 02:15:53,030


1199
02:15:59,030 --> 02:16:05,869


1200
02:16:05,869 --> 02:16:11,030


1201
02:16:11,030 --> 02:16:17,059


1202
02:16:17,059 --> 02:16:19,879


1203
02:16:19,879 --> 02:16:24,619


1204
02:16:24,619 --> 02:16:28,869


1205
02:16:28,869 --> 02:16:34,119


