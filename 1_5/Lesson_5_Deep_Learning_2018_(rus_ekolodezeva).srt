1
00:00:00,030 --> 00:00:05,784
Добро пожаловать на пятую лекцию.

2
00:00:05,884 --> 00:00:27,834
Один из студентов магистратуры нашего университета написал пост про анализ структурированных данных по нашему курсу.

3
00:00:27,934 --> 00:00:37,824
Пост оказался очень популярным, как я и ожидал. Его опубликовали на сайте towardsdatascience.com,

4
00:00:37,924 --> 00:00:46,840
это неплохой ресурс для тех, кто интересуется новостями анализа данных.

5
00:00:46,940 --> 00:00:58,195
Автор поста - Kerem Turgutlu. Его пост рассказывает об основных идеях с последней лекции.

6
00:00:58,295 --> 00:01:05,452
Sebastian Ruder, которого я уже упоминал на прошлой неделе как одного из моих любимых исследователей,

7
00:01:05,552 --> 00:01:16,590
поделился ссылкой на этот пост, а кто-то из Stitch Fix ответил, что они давно таким занимаются.

8
00:01:16,590 --> 00:01:23,125
Я знаю, что в индустрии многие занимаются анализом структурированных данных, но про это никто не пишет.

9
00:01:23,225 --> 00:01:31,509
Тут Kerem публикует пост, и Stitch Fix сразу отвечает - "ну, ничего нового".

10
00:01:31,609 --> 00:01:46,310
Я был рад этому посту, и думаю, что на эту тему можно ещё много написать - например, про работу с различными датасетами,

11
00:01:46,410 --> 00:01:57,429
или анализ старых соревнований Kaggle, которые можно или нельзя было бы выиграть с современными инструментами.

12
00:01:57,529 --> 00:02:13,970
Было бы интересно почитать про различные характеристики дропаута, я не видел про это статей.

13
00:02:13,970 --> 00:02:21,950
Я думаю, тут большой потенциал для развития. Кто-то в Twitter ответил на пост фразой "Я столько лет искал эту информацию!".

14
00:02:25,310 --> 00:02:36,940
Nikhil B, чьи классификаторы игроков в бейсбол или крикет и изображения купюр я упоминал после первой лекции,

15
00:02:36,940 --> 00:02:54,545
скачал из Google пару сотен фотографий актёров в очках и без очков, разметил их вручную и обучил классификатор.

16
00:02:54,645 --> 00:03:06,724
Архитектура ResNet работала плохо, поэтому он экспериментировал с разморозкой слоёв

17
00:03:06,824 --> 00:03:11,440
и дифференциальными скоростями обучения, и достиг доли правильных ответов в 100%.

18
00:03:11,709 --> 00:03:22,590
Мне нравится, что он выбрал реальную задачу - изображения из Google, а не размеченный датасет с Kaggle.

19
00:03:22,690 --> 00:03:30,930
В его посте есть ссылка на удобный инструмент для скачивания изображений из Google.

20
00:03:31,030 --> 00:03:41,379
Сегодня я выступал в Университете Сингулярности перед топ-менеджерами одной из крупнейшних телекомуникационных компаний.

21
00:03:41,479 --> 00:03:56,220
Их поставщики убеждали их собирать миллионы изображений, покупать высокие вычислительные мощности и специальные программы.

22
00:03:56,320 --> 00:04:03,960
Я показал им этот пост и сказал - "Вот чего достиг человек после трёх недель обучения на машине за 60 центов в час".

23
00:04:04,060 --> 00:04:13,140
Они были очень рады, узнав, что такое доступно обычным людям.

24
00:04:13,240 --> 00:04:20,030
Я предполагаю, что Nikhil - обычный человек, прошу прощения, если ненароком его обидел.

25
00:04:20,029 --> 00:04:31,650
Я посмотрел на его классификатор игроков в крикет. Этот код совпадает с кодом с первой лекции за исключением количества эпох.

26
00:04:31,750 --> 00:04:42,852
Я надеялся, что так случится. Это доказывает, что эти четыре строки - полезный инструмент.

27
00:04:42,952 --> 00:04:50,894
Показывайте эти результаты топ-менеджерам своих компаний.

28
00:04:50,994 --> 00:05:04,820
Они будут сомневаться и говорить вам - "Если так можно, почему нам никто до сих пор этого не сказал?",

29
00:05:04,820 --> 00:05:15,885
поэтому вам придётся продемонстрировать это на собственных примерах, например, данных вашей компании.

30
00:05:15,985 --> 00:05:28,700
Vitaly Bushaev написал введение в обучение нейронных сетей.

31
00:05:28,700 --> 00:05:40,340
У него хороший слог и умение объяснять сложные вещи простым языком, берите с него пример.

32
00:05:43,280 --> 00:05:52,220
Автор начинает с азов, но читатель понимает, что его не принимают за дурака -

33
00:05:52,220 --> 00:06:03,610
за каждым уравнением следует подробное объяснение того, что всё это значит.

34
00:06:03,710 --> 00:06:11,450
Автору удаётся сочетать уважение к читателям и отсутствие у них изначальных знаний в данной области.

35
00:06:11,450 --> 00:06:21,480
На этой неделе я запостил скриншот рейтинга соревнования Plant Seedlings Classification на Kaggle, где занимал первое место.

36
00:06:21,580 --> 00:06:31,025
Это было ошибкой, потому что к текущему моменту уже пятеро студентов нашего курса обогнали меня в этом рейтинге.

37
00:06:31,125 --> 00:06:41,870
Это текущий рейтинг соревнования, первые пять результатов - студенты курса fast.ai, шестой - преподаватель курса.

38
00:06:41,970 --> 00:07:06,212
Датасет состоит из нескольких тысяч изображений, размер большинства которых меньше 100x100.

39
00:07:06,312 --> 00:07:16,115
Для своего результата я просто последовательно выполнил ячейки Jupyter ноутбука, это заняло где-то час.

40
00:07:16,215 --> 00:07:23,170
Я думаю, эти студенты в рейтинге сделали немного больше, но не сильно.

41
00:07:23,170 --> 00:07:48,520
Как видно, стандартные средства библиотеки fastai дают хорошие результаты без особых усилий.

42
00:07:48,520 --> 00:07:55,510
Сегодня мы перейдём ко второй половине первой части курса.

43
00:07:55,510 --> 00:08:09,067
В первой половине мы разбирались пробежались по основным темам, поняли, как создавать соответствующие модели,

44
00:08:09,167 --> 00:08:13,590
и получили примерное представление о том, как они работают.

45
00:08:17,830 --> 00:08:27,245
Сейчас мы пройдёмся по этим темам снова, но уже углубленно, разбираясь во всех деталях

46
00:08:27,345 --> 00:08:35,590
и читая исходный код библиотеки fastai для того, чтобы повторить все шаги.

47
00:08:35,590 --> 00:08:45,370
К текущему моменту я показал вам лучшие из известных мне подходов, мы пока отойдём от этого.

48
00:08:45,370 --> 00:08:52,085
Я думаю, что перед тем, как изучать новые техники во второй части курса, важно понять,

49
00:08:52,185 --> 00:08:58,780
как работает код для всего, что мы уже умеем.

50
00:08:58,780 --> 00:09:12,625
Сегодня мы почти с нуля создадим весьма успешную модель коллаборативной фильтрации.

51
00:09:12,725 --> 00:09:19,330
Мы используем PyTorch для дифференцирования и библиотеку для работы с GPU, всё остальное напишем сами.

52
00:09:19,330 --> 00:09:24,977
Мы не будем использовать средства PyTorch для работы с нейронными сетями и постараемся не злоупотреблять средствами fastai.

53
00:09:25,077 --> 00:09:35,800
Мы не успели подробно разобрать коллаборативную фильтрацию на прошлой лекции, давайте к этому вернёмся.

54
00:09:35,800 --> 00:09:45,155
Мы будем работать с датасетом Movielens, это список оценок фильмов.

55
00:09:45,255 --> 00:09:58,900
Пользователи представлены индексом userId, фильмы - индексом movieId, оценки и даты их выставления записаны в столбцах rating и timestamp.

56
00:09:58,900 --> 00:10:12,650
Я никогда не использовал признак Timestamp, мы будем использовать признаки userId, movieId и rating.

57
00:10:12,750 --> 00:10:28,410
В терминах структурированных данных признаки userId и movieId - категориальные, а оценка - целевая переменная.

58
00:10:28,410 --> 00:10:35,330
У нас есть таблица названий фильмов, мы не будем использовать их для обучения модели, только для демонстрации её работы.

59
00:10:35,430 --> 00:10:46,089
Здесь также указаны жанры фильмов, я не использую их, кто-нибудь на этой неделе может проверить, прав ли я в этом.

60
00:10:46,089 --> 00:10:55,180
Для того, чтобы посмотреть на датасет, я выбрал пользователей, которые посмотрели больше всего фильмов,

61
00:10:57,880 --> 00:11:03,820
взял самые популярные фильмы и составил перекрёстную таблицу методом pandas.crosstab().

62
00:11:03,820 --> 00:11:12,680
Это подмножество датасета. Строки соответствуют пользователям, столбцы - фильмам, соответствующие оценки - в пересечениях.

63
00:11:12,780 --> 00:11:18,557
Некоторые пользователи не смотрели определённые фильмы, поэтому в таблице есть значения NaN.

64
00:11:18,657 --> 00:11:37,955
Я скопировал эту таблицу в Excel, демонстрация называется collab_filter.xlsx.

65
00:11:38,055 --> 00:12:09,790
Если вы чего-то не понимаете, задавайте вопросы здесь или на форуме. Янет следит за вопросами на форуме.

66
00:12:09,790 --> 00:12:19,803
Сейчас мы переходим к деталям работы, поэтому очень важно, чтобы все всё понимали.

67
00:12:19,903 --> 00:12:47,420
Мы не будем обучать нейронную сеть, а займёмся сначала факторизацией матриц, потому что это простейший способ решить нашу задачу.

68
00:12:47,520 --> 00:12:57,800
Эта матрица предсказаний, построенная по такому же принципу, как и скопированная из Jupyter ноутбука.

69
00:12:57,900 --> 00:13:18,645
Это истинные значения, это предсказания, это - среднеквадратичная ошибка (RMSE) между этими двумя таблицами.

70
00:13:18,745 --> 00:13:25,005
Таблица предсказаний состоит из случайных чисел, ошибка составляет 2.81.

71
00:13:25,105 --> 00:13:41,560
Сейчас я покажу, как мы предказываем, что пользователь номер 14 оценит фильм номер 27 как 0.91. Пока оценка случайная.

72
00:13:41,560 --> 00:14:05,990
Оценка получается поэлементным умножением выделенных векторов.

73
00:14:05,990 --> 00:14:22,509
Красный вектор - матрица размера 1x5, фиолетовый - матрица размера 5x1. Перемножая эти матрицы, получаем предсказание.

74
00:14:22,609 --> 00:14:33,050
Если для какой-то оценки нет истинного значения, она будет равна нулю, чтобы корректно считать функцию потерь.

75
00:14:34,220 --> 00:14:46,149
Наша модель - не нейронная сеть, а просто перемножение двух матриц.

76
00:14:46,249 --> 00:15:04,430
Таблица предсказаний 15x15 получена перемножением левой матрицы 15x5 на верхнюю матрицу 5x15.

77
00:15:04,430 --> 00:15:28,165
Сейчас числа в этих матрицах, то есть начальные веса модели, случайные, а модель - это перемножение этих матриц.

78
00:15:28,265 --> 00:15:43,135
Excel умеет выполнять градиентный спуск, его нужно включить в настройках, и станет доступен Решатель.

79
00:15:43,235 --> 00:16:07,525
В Решатель передаются ячейка с целевой функцией (RMSE) и ячейки с оптимизируемыми значениями (две матрицы).

80
00:16:07,625 --> 00:16:20,110
Решатель меняет числа в матрицах и с помощью градиентного спуска находит значения, минимизирующие целевую функцию.

81
00:16:20,520 --> 00:16:33,985
После запуска Решателя значение целевой функции начинает уменьшаться.

82
00:16:34,085 --> 00:16:43,840
Умножение матриц и градиентный спуск наводят на мысли о нейронных сетях,

83
00:16:43,940 --> 00:16:51,630
но здесь нет нелинейного слоя и второго слоя, поэтому это не глубокое обучение.

84
00:16:51,630 --> 00:17:00,150
Модели, использующие произведения матриц без нелинейных слоёв, называют моделями неглубокого обучения.

85
00:17:01,830 --> 00:17:17,189
Мне надоело ждать, поэтому я остановлю Решатель. Среднеквадратичная ошибка упала с 2.81 до 0.39.

86
00:17:17,189 --> 00:17:36,650
Модель предсказывает, что пользователь 72 поставил фильму 27 оценку 4.4. Истинное значение - 4, как видите, модель работает.

87
00:17:36,650 --> 00:18:11,190
Необходимо предсказать 225 значений, используя 150 параметров, поэтому это не простой подгон, а машинное обучение.

88
00:18:11,190 --> 00:18:23,725
В линейной алгебре такой процесс называется разложением матрицы, это можно было сделать аналитически,

89
00:18:23,825 --> 00:18:29,430
а мы делаем это с помощью градиентного спуска. Градиентный спуск - мощный инструмент.

90
00:18:29,430 --> 00:18:36,960
Я предпочитаю рассматривать это с интуитивной точки зрения, а не с точки зрения линейной алгебры.

91
00:18:36,960 --> 00:18:56,225
Предположим, что фильм номер 27 - это Властелин Колец: Братство Кольца, и мы хотим узнать, понравится ли он пользователю 72.

92
00:18:56,325 --> 00:19:11,250
Фильму соответствует пять чисел. Допустим, первое число говорит, насколько фильм фантастический,

93
00:19:11,250 --> 00:19:21,390
второе - настолько давно он вышел и какие там спецэффекты, пятое - сколько в фильме диалогов.

94
00:19:21,390 --> 00:19:27,820
Пять чисел соответствуют пяти признакам фильма.

95
00:19:27,920 --> 00:19:45,265
В таком случае для каждого пользователя можно сказать, насколько он любит фэнтези, спецэффекты и диалоги в фильмах.

96
00:19:45,365 --> 00:19:54,310
Сумма поэлементных умножений чисел пользователя на числа фильма отразит то, понравится ему этот фильм или нет.

97
00:19:54,410 --> 00:20:13,060
У нас нет этой информации о фильмах и пользователях, мы выбираем этот подход, и градиентный спуск подбирает эти числа.

98
00:20:13,160 --> 00:20:36,030
Эти числа называются скрытые факторы. Они скрытые, потому что мы не выделяли и не называли эти неявные признаки,

99
00:20:36,030 --> 00:20:46,740
а просто предположили, что факторы их отражают. Мы предположили, что оценка фильма может быть получена

100
00:20:46,740 --> 00:20:53,605
перемножением значений каких-то признаков фильма и соответствующих предпочтений пользователя,

101
00:20:53,705 --> 00:21:06,175
и использовали градиентный спуск, чтобы найти значения этих неизвестных признаков.

102
00:21:06,275 --> 00:21:14,889
В этом суть вероятностной факторизации матриц, так работает коллаборативная фильтрация с её применением.

103
00:21:14,989 --> 00:21:26,490
Всё, что мы сделали - инициализировали две случайные матрицы и перемножили их.

104
00:21:26,490 --> 00:21:38,250
Вопрос из зала: Может, надо было отнормировать значения к шкале от 0 до 5?

105
00:21:38,250 --> 00:21:46,380
Да, мы сделаем это и ещё много чего. Это - простейшая версия.

106
00:21:46,380 --> 00:21:50,850
Мы напишем этот алгоритм на Python и запустим на всём датасете.

107
00:21:54,750 --> 00:22:03,050
Вопрос из зала: Как определить размеры матриц?

108
00:22:03,150 --> 00:22:43,220
Эти матрицы - это матрицы эмбеддинга, 5 - её ширина. Для фильма 72 мы бы взяли строку номер 72 и получили эти пять чисел.

109
00:22:43,220 --> 00:22:53,780
Вопрос в том, как выбрать ширину матрицы эмбеддинга, и ответ - непонятно, надо пробовать.

110
00:22:53,780 --> 00:23:10,410
Число должно быть достаточно большим, чтобы учесть сложные закономерности, но не слишком большим,

111
00:23:10,510 --> 00:23:17,460
иначе параметров будет слишком много и модель будет очень долго обучаться и может переобучиться.

112
00:23:17,560 --> 00:23:26,865
Вопрос из зала: Что значат негативные факторы в матрицах эмбеддинга?

113
00:23:26,965 --> 00:23:34,610
В матрице для фильмов - например, то, что диалогов в фильме мало и они плохие.

114
00:23:34,610 --> 00:23:41,540
В матрице для пользователей - например, то, что пользователь терпеть не может спецэффекты в фильмах.

115
00:23:41,540 --> 00:23:49,645
Вопрос из зала: То есть факторы могут быть любые? Никаких ограничений?

116
00:23:49,745 --> 00:23:54,447
Да, любые, это просто матрицы эмбеддинга.

117
00:23:54,547 --> 00:24:19,340
Вопрос из зала: Почему мы доверяем этим матрицам эмбеддинга?

118
00:24:21,410 --> 00:24:33,380
Мы используем градиентный спуск для подбора факторов. Найдя хороший минимум, мы перестаём в них сомневаться,

119
00:24:33,380 --> 00:24:42,720
так как другие числа будут хуже. Конечно, нужно смотреть на результаты на валидационной выборке, мы будем это делать.

120
00:24:42,820 --> 00:24:50,240
Вопрос из зала: Нужно ли обучать модель заново при появлении нового пользователя или нового фильма?

121
00:24:50,240 --> 00:24:56,365
Очень хороший вопрос, на него нет короткого и быстрого ответа.

122
00:24:56,465 --> 00:25:11,000
Нужна будет немного другая модель, и со временем её придётся дообучать.

123
00:25:11,000 --> 00:25:28,110
Раньше Netflix после регистрации просил указать фильмы, которые вам понравились, и дообучал модель на этих данных.

124
00:25:28,210 --> 00:25:38,895
Вопрос из зала: Можно ли для этого просто найти максимально похожие фильмы?

125
00:25:38,995 --> 00:25:50,685
Да, но для этого нужно построить модель с признаками фильмов - жанр, год выпуска, актёры на главных ролях.

126
00:25:50,785 --> 00:26:05,235
У нас признаки не выделены, поэтому нужно использовать коллаборативную фильтрацию.

127
00:26:07,635 --> 00:26:17,010
Многие части кода вам уже знакомы. Мы начнём использовать PyTorch и fastai,

128
00:26:17,110 --> 00:26:26,610
а потом углубимся в детали их работы и несколько раз поменяем.

129
00:26:26,710 --> 00:26:39,860
Мы создаём валидационную выборку знакомой функцией get_ct_idxs().

130
00:26:39,860 --> 00:26:47,050
Параметр wd=2e-4 - это weight decay, обсудим позже. Для тех, кто проходил курс "Машинное обучение" - это L2-регуляризация.

131
00:26:47,050 --> 00:26:53,742
Параметр n_factors - ширина таблицы эмбеддинга.

132
00:26:53,842 --> 00:27:06,375
Объект данных модели создаётся методом CollabFilterDataset.from_csv(), в него передаётся таблица с оценками.

133
00:27:06,475 --> 00:27:28,425
После этого нужно передать признак userId для строк, признак movieId для столбцов и целевую переменную ratings.

134
00:27:28,525 --> 00:27:33,390
Все рекомендательные системы на основе коллаборативной фильтрации построены так -

135
00:27:33,490 --> 00:27:40,660
есть набор пользователей и набор товаров, эти наборы связаны.

136
00:27:40,660 --> 00:27:53,530
В соревновании по предсказанию продаж вместо пользователей - магазины, а товары - то, что они продадут.

137
00:27:53,530 --> 00:28:09,045
Принцип один - по паре категориальных признаков высокой мощности через произведение матриц вычисляется оценка или вероятностью.

138
00:28:09,145 --> 00:28:26,800
Можно думать про это по-другому: когда мы предсказываем, понравится ли пользователю 72 фильм 27, мы смотрим,

139
00:28:26,900 --> 00:28:43,635
каким пользователям нравятся те же фильмы, что и пользователю 72, и какие фильмы нравятся пользователям, похожим на пользователя 72.

140
00:28:43,735 --> 00:28:56,475
Это две формулировки одного вопроса. Коллаборативная фильтрация рассматривает пары "пользователь - фильм"

141
00:28:56,575 --> 00:29:11,670
и ищет фильмы, которые смотрели похожие люди, и людей, которые смотрели похожие фильмы.

142
00:29:11,770 --> 00:29:21,240
Если ваш датасет построен таким образом, при работе с ним можно использовать коллаборативную фильтрацию.

143
00:29:21,340 --> 00:29:28,460
Итак, есть два признака и целевая переменная.

144
00:29:28,460 --> 00:29:34,310
Как обычно, мы получаем алгоритм обучения из объекта данных модели методом .get_learner().

145
00:29:34,310 --> 00:29:48,285
Метод принимает ширину матрицы эмбеддинга n_factors, валидационную выборку val_idxs, размер минибатча 64 и алгоритм оптимизации opt_fn.

146
00:29:48,385 --> 00:29:52,842
Мы ещё обсудим алгоритмы оптимизации, здесь используется Adam.

147
00:29:52,942 --> 00:30:03,210
После создания алгоритма обучения мы обучаем модель, всё как обычно.

148
00:30:03,310 --> 00:30:10,905
Такие модели обучаются быстро, здесь всего три эпохи.

149
00:30:11,005 --> 00:30:15,480
Можно использовать алгоритм поиска скорости обучения и всё остальное, к чему вы уже привыкли.

150
00:30:15,580 --> 00:30:17,810


151
00:30:17,810 --> 00:30:22,940


152
00:30:22,940 --> 00:30:29,840


153
00:30:31,730 --> 00:30:37,040


154
00:30:37,040 --> 00:30:42,170


155
00:30:42,170 --> 00:30:46,700


156
00:30:46,700 --> 00:30:51,020


157
00:30:51,020 --> 00:30:58,880


158
00:30:58,880 --> 00:31:05,610


159
00:31:09,300 --> 00:31:14,400


160
00:31:14,400 --> 00:31:17,790


161
00:31:21,000 --> 00:31:26,040


162
00:31:26,040 --> 00:31:30,450


163
00:31:30,450 --> 00:31:35,520


164
00:31:35,520 --> 00:31:40,770


165
00:31:40,770 --> 00:31:45,120


166
00:31:45,120 --> 00:31:48,960


167
00:31:48,960 --> 00:31:54,230


168
00:31:54,230 --> 00:32:00,120


169
00:32:02,340 --> 00:32:06,150


170
00:32:06,150 --> 00:32:10,620


171
00:32:12,960 --> 00:32:18,420


172
00:32:18,420 --> 00:32:25,110


173
00:32:29,400 --> 00:32:34,890


174
00:32:34,890 --> 00:32:39,860


175
00:32:41,750 --> 00:32:50,220


176
00:32:50,220 --> 00:32:56,610


177
00:32:59,730 --> 00:33:05,520


178
00:33:05,520 --> 00:33:09,510


179
00:33:09,510 --> 00:33:13,890


180
00:33:13,890 --> 00:33:16,980


181
00:33:16,980 --> 00:33:21,600


182
00:33:21,600 --> 00:33:24,570


183
00:33:24,570 --> 00:33:28,160


184
00:33:28,160 --> 00:33:34,080


185
00:33:37,040 --> 00:33:44,850


186
00:33:44,850 --> 00:33:47,550


187
00:33:47,550 --> 00:33:50,940


188
00:33:50,940 --> 00:33:59,430


189
00:33:59,430 --> 00:34:04,800


190
00:34:04,800 --> 00:34:10,409


191
00:34:10,409 --> 00:34:16,110


192
00:34:16,110 --> 00:34:22,110


193
00:34:22,110 --> 00:34:26,610


194
00:34:26,610 --> 00:34:31,290


195
00:34:31,290 --> 00:34:37,679


196
00:34:37,679 --> 00:34:43,440


197
00:34:43,440 --> 00:34:48,840


198
00:34:48,840 --> 00:34:55,560


199
00:34:55,560 --> 00:35:01,470


200
00:35:01,470 --> 00:35:06,330


201
00:35:06,330 --> 00:35:11,010


202
00:35:11,010 --> 00:35:19,590


203
00:35:19,590 --> 00:35:25,610


204
00:35:29,120 --> 00:35:40,140


205
00:35:40,140 --> 00:35:48,150


206
00:35:48,150 --> 00:35:56,520


207
00:35:56,520 --> 00:36:00,240


208
00:36:00,240 --> 00:36:07,560


209
00:36:07,560 --> 00:36:13,110


210
00:36:13,110 --> 00:36:17,640


211
00:36:20,150 --> 00:36:25,220


212
00:36:28,080 --> 00:36:34,260


213
00:36:34,260 --> 00:36:39,270


214
00:36:42,360 --> 00:36:46,650


215
00:36:46,650 --> 00:36:51,390


216
00:36:51,390 --> 00:36:56,940


217
00:36:56,940 --> 00:37:08,520


218
00:37:08,520 --> 00:37:15,630


219
00:37:15,630 --> 00:37:21,120


220
00:37:21,120 --> 00:37:26,370


221
00:37:26,370 --> 00:37:29,910


222
00:37:29,910 --> 00:37:35,610


223
00:37:35,610 --> 00:37:39,060


224
00:37:39,060 --> 00:37:43,980


225
00:37:43,980 --> 00:37:52,950


226
00:37:52,950 --> 00:37:57,960


227
00:37:57,960 --> 00:38:02,640


228
00:38:02,640 --> 00:38:08,369


229
00:38:08,369 --> 00:38:14,730


230
00:38:14,730 --> 00:38:20,070


231
00:38:20,070 --> 00:38:26,550


232
00:38:26,550 --> 00:38:31,410


233
00:38:33,690 --> 00:38:38,400


234
00:38:38,400 --> 00:38:43,440


235
00:38:43,440 --> 00:38:48,660


236
00:38:48,660 --> 00:38:55,770


237
00:38:55,770 --> 00:39:01,230


238
00:39:01,230 --> 00:39:07,020


239
00:39:07,020 --> 00:39:15,060


240
00:39:15,060 --> 00:39:26,820


241
00:39:26,820 --> 00:39:33,560


242
00:39:33,560 --> 00:39:40,920


243
00:39:40,920 --> 00:39:46,200


244
00:39:48,510 --> 00:39:52,769


245
00:39:54,210 --> 00:40:00,359


246
00:40:00,359 --> 00:40:06,779


247
00:40:06,779 --> 00:40:11,130


248
00:40:11,130 --> 00:40:20,069


249
00:40:20,069 --> 00:40:26,279


250
00:40:26,279 --> 00:40:32,640


251
00:40:32,640 --> 00:40:37,109


252
00:40:37,109 --> 00:40:43,019


253
00:40:43,019 --> 00:40:48,180


254
00:40:48,180 --> 00:40:51,989


255
00:40:51,989 --> 00:40:56,849


256
00:40:56,849 --> 00:41:01,529


257
00:41:01,529 --> 00:41:08,130


258
00:41:08,130 --> 00:41:13,979


259
00:41:16,529 --> 00:41:23,390


260
00:41:23,390 --> 00:41:28,349


261
00:41:28,349 --> 00:41:34,499


262
00:41:38,039 --> 00:41:43,319


263
00:41:46,289 --> 00:41:49,670


264
00:41:49,670 --> 00:41:54,930


265
00:41:57,509 --> 00:42:03,099


266
00:42:03,099 --> 00:42:11,109


267
00:42:12,549 --> 00:42:21,279


268
00:42:21,279 --> 00:42:24,880


269
00:42:24,880 --> 00:42:29,470


270
00:42:33,880 --> 00:42:42,640


271
00:42:44,470 --> 00:42:51,670


272
00:42:51,670 --> 00:42:54,309


273
00:42:54,309 --> 00:42:58,930


274
00:43:00,789 --> 00:43:03,640


275
00:43:06,729 --> 00:43:14,859


276
00:43:14,859 --> 00:43:22,119


277
00:43:22,119 --> 00:43:27,729


278
00:43:29,920 --> 00:43:36,039


279
00:43:36,039 --> 00:43:41,319


280
00:43:43,690 --> 00:43:49,239


281
00:43:49,239 --> 00:43:54,819


282
00:43:54,819 --> 00:44:00,609


283
00:44:00,609 --> 00:44:10,599


284
00:44:10,599 --> 00:44:16,910


285
00:44:18,650 --> 00:44:21,760


286
00:44:21,760 --> 00:44:28,850


287
00:44:32,450 --> 00:44:37,850


288
00:44:37,850 --> 00:44:44,000


289
00:44:44,000 --> 00:44:47,840


290
00:44:47,840 --> 00:44:53,360


291
00:44:53,360 --> 00:44:57,890


292
00:44:59,120 --> 00:45:04,840


293
00:45:04,840 --> 00:45:09,560


294
00:45:09,560 --> 00:45:13,910


295
00:45:13,910 --> 00:45:20,030


296
00:45:20,030 --> 00:45:25,280


297
00:45:25,280 --> 00:45:30,190


298
00:45:30,190 --> 00:45:35,900


299
00:45:35,900 --> 00:45:41,870


300
00:45:41,870 --> 00:45:47,780


301
00:45:47,780 --> 00:45:55,280


302
00:45:55,280 --> 00:46:01,880


303
00:46:01,880 --> 00:46:09,910


304
00:46:12,920 --> 00:46:17,750


305
00:46:17,750 --> 00:46:22,400


306
00:46:22,400 --> 00:46:26,180


307
00:46:29,210 --> 00:46:32,300


308
00:46:32,300 --> 00:46:38,060


309
00:46:41,870 --> 00:46:44,930


310
00:46:44,930 --> 00:46:51,020


311
00:46:51,020 --> 00:46:56,420


312
00:46:56,420 --> 00:47:02,830


313
00:47:02,830 --> 00:47:08,920


314
00:47:08,920 --> 00:47:19,100


315
00:47:19,100 --> 00:47:29,350


316
00:47:32,320 --> 00:47:37,310


317
00:47:37,310 --> 00:47:48,950


318
00:47:48,950 --> 00:47:54,860


319
00:47:54,860 --> 00:48:00,850


320
00:48:00,850 --> 00:48:04,940


321
00:48:04,940 --> 00:48:13,160


322
00:48:13,160 --> 00:48:16,970


323
00:48:16,970 --> 00:48:21,230


324
00:48:21,230 --> 00:48:28,430


325
00:48:28,430 --> 00:48:34,970


326
00:48:34,970 --> 00:48:42,950


327
00:48:42,950 --> 00:48:49,969


328
00:48:49,969 --> 00:48:57,680


329
00:48:57,680 --> 00:49:02,479


330
00:49:02,479 --> 00:49:08,329


331
00:49:08,329 --> 00:49:16,339


332
00:49:19,729 --> 00:49:25,339


333
00:49:25,339 --> 00:49:31,039


334
00:49:31,039 --> 00:49:35,900


335
00:49:35,900 --> 00:49:41,959


336
00:49:45,319 --> 00:49:51,469


337
00:49:51,469 --> 00:49:57,099


338
00:49:59,670 --> 00:50:05,269


339
00:50:07,609 --> 00:50:18,229


340
00:50:18,229 --> 00:50:24,769


341
00:50:24,769 --> 00:50:31,069


342
00:50:31,069 --> 00:50:35,839


343
00:50:35,839 --> 00:50:41,420


344
00:50:41,420 --> 00:50:45,829


345
00:50:45,829 --> 00:50:50,929


346
00:50:50,929 --> 00:50:53,660


347
00:50:55,489 --> 00:51:01,140


348
00:51:01,140 --> 00:51:07,049


349
00:51:07,049 --> 00:51:13,680


350
00:51:13,680 --> 00:51:18,900


351
00:51:18,900 --> 00:51:23,640


352
00:51:23,640 --> 00:51:29,339


353
00:51:29,339 --> 00:51:33,479


354
00:51:33,479 --> 00:51:36,839


355
00:51:36,839 --> 00:51:41,489


356
00:51:41,489 --> 00:51:45,509


357
00:51:45,509 --> 00:51:50,489


358
00:51:50,489 --> 00:51:54,630


359
00:51:54,630 --> 00:51:59,339


360
00:51:59,339 --> 00:52:03,269


361
00:52:03,269 --> 00:52:08,039


362
00:52:08,039 --> 00:52:18,539


363
00:52:18,539 --> 00:52:24,630


364
00:52:24,630 --> 00:52:30,839


365
00:52:30,839 --> 00:52:36,989


366
00:52:36,989 --> 00:52:47,519


367
00:52:49,549 --> 00:52:55,469


368
00:52:55,469 --> 00:53:02,640


369
00:53:02,640 --> 00:53:07,499


370
00:53:07,499 --> 00:53:11,400


371
00:53:11,400 --> 00:53:14,430


372
00:53:17,220 --> 00:53:21,960


373
00:53:21,960 --> 00:53:26,670


374
00:53:26,670 --> 00:53:29,700


375
00:53:31,380 --> 00:53:35,940


376
00:53:35,940 --> 00:53:42,420


377
00:53:42,420 --> 00:53:48,359


378
00:53:48,359 --> 00:53:54,900


379
00:53:54,900 --> 00:54:01,079


380
00:54:01,079 --> 00:54:07,859


381
00:54:10,230 --> 00:54:16,890


382
00:54:16,890 --> 00:54:21,230


383
00:54:21,230 --> 00:54:27,359


384
00:54:27,359 --> 00:54:31,380


385
00:54:31,380 --> 00:54:37,079


386
00:54:37,079 --> 00:54:43,950


387
00:54:45,809 --> 00:54:51,170


388
00:54:51,170 --> 00:54:58,230


389
00:54:58,230 --> 00:55:07,740


390
00:55:12,510 --> 00:55:18,359


391
00:55:21,770 --> 00:55:25,099


392
00:55:25,490 --> 00:55:32,070


393
00:55:32,070 --> 00:55:39,960


394
00:55:39,960 --> 00:55:46,110


395
00:55:46,110 --> 00:55:52,050


396
00:55:52,050 --> 00:55:58,290


397
00:55:58,290 --> 00:56:04,590


398
00:56:04,590 --> 00:56:09,000


399
00:56:09,000 --> 00:56:14,700


400
00:56:14,700 --> 00:56:21,510


401
00:56:21,510 --> 00:56:24,990


402
00:56:27,300 --> 00:56:30,960


403
00:56:30,960 --> 00:56:35,850


404
00:56:35,850 --> 00:56:41,250


405
00:56:41,250 --> 00:56:46,040


406
00:56:46,040 --> 00:56:49,980


407
00:56:49,980 --> 00:56:53,400


408
00:56:53,400 --> 00:56:57,540


409
00:56:57,540 --> 00:57:02,100


410
00:57:02,100 --> 00:57:06,540


411
00:57:06,540 --> 00:57:11,130


412
00:57:11,130 --> 00:57:15,720


413
00:57:19,100 --> 00:57:29,460


414
00:57:29,460 --> 00:57:37,020


415
00:57:37,020 --> 00:57:41,369


416
00:57:41,369 --> 00:57:46,920


417
00:57:46,920 --> 00:57:50,940


418
00:57:50,940 --> 00:57:54,089


419
00:57:54,089 --> 00:57:57,960


420
00:57:57,960 --> 00:58:02,160


421
00:58:02,160 --> 00:58:08,490


422
00:58:08,490 --> 00:58:13,740


423
00:58:13,740 --> 00:58:20,730


424
00:58:20,730 --> 00:58:27,630


425
00:58:27,630 --> 00:58:39,809


426
00:58:39,809 --> 00:58:45,779


427
00:58:45,779 --> 00:58:54,960


428
00:58:54,960 --> 00:59:01,049


429
00:59:01,049 --> 00:59:07,470


430
00:59:07,470 --> 00:59:17,039


431
00:59:17,039 --> 00:59:20,940


432
00:59:20,940 --> 00:59:28,500


433
00:59:28,500 --> 00:59:35,059


434
00:59:35,059 --> 00:59:39,569


435
00:59:42,059 --> 00:59:45,960


436
00:59:45,960 --> 00:59:50,550


437
00:59:50,550 --> 00:59:55,740


438
00:59:57,480 --> 01:00:02,880


439
01:00:02,880 --> 01:00:09,780


440
01:00:09,780 --> 01:00:15,210


441
01:00:15,210 --> 01:00:19,230


442
01:00:19,230 --> 01:00:26,550


443
01:00:26,550 --> 01:00:33,540


444
01:00:33,540 --> 01:00:40,140


445
01:00:40,140 --> 01:00:44,790


446
01:00:44,790 --> 01:00:50,970


447
01:00:50,970 --> 01:00:57,150


448
01:00:57,150 --> 01:01:05,400


449
01:01:05,400 --> 01:01:10,710


450
01:01:10,710 --> 01:01:17,040


451
01:01:17,040 --> 01:01:24,300


452
01:01:24,300 --> 01:01:29,640


453
01:01:32,280 --> 01:01:37,380


454
01:01:37,380 --> 01:01:44,420


455
01:01:44,420 --> 01:01:51,780


456
01:01:51,780 --> 01:01:58,400


457
01:01:58,400 --> 01:02:05,559


458
01:02:05,559 --> 01:02:11,200


459
01:02:14,650 --> 01:02:20,980


460
01:02:20,980 --> 01:02:27,630


461
01:02:27,630 --> 01:02:32,579


462
01:02:32,579 --> 01:02:41,559


463
01:02:41,559 --> 01:02:46,900


464
01:02:46,900 --> 01:02:50,470


465
01:02:52,450 --> 01:02:59,020


466
01:02:59,020 --> 01:03:02,230


467
01:03:02,230 --> 01:03:09,400


468
01:03:09,400 --> 01:03:14,710


469
01:03:14,710 --> 01:03:20,440


470
01:03:20,440 --> 01:03:25,900


471
01:03:25,900 --> 01:03:29,890


472
01:03:29,890 --> 01:03:34,630


473
01:03:34,630 --> 01:03:44,260


474
01:03:44,260 --> 01:03:50,289


475
01:03:50,289 --> 01:03:58,380


476
01:03:58,440 --> 01:04:02,770


477
01:04:02,770 --> 01:04:07,150


478
01:04:07,150 --> 01:04:14,260


479
01:04:14,260 --> 01:04:21,370


480
01:04:23,340 --> 01:04:27,640


481
01:04:28,030 --> 01:04:31,750


482
01:04:31,750 --> 01:04:36,760


483
01:04:36,760 --> 01:04:44,740


484
01:04:46,900 --> 01:04:53,800


485
01:04:53,800 --> 01:04:58,000


486
01:04:58,000 --> 01:05:03,300


487
01:05:03,300 --> 01:05:07,360


488
01:05:07,360 --> 01:05:11,920


489
01:05:11,920 --> 01:05:17,110


490
01:05:17,110 --> 01:05:22,180


491
01:05:24,640 --> 01:05:29,470


492
01:05:29,470 --> 01:05:34,180


493
01:05:34,180 --> 01:05:37,390


494
01:05:37,390 --> 01:05:40,510


495
01:05:40,510 --> 01:05:46,870


496
01:05:50,590 --> 01:05:54,610


497
01:05:54,610 --> 01:05:59,770


498
01:05:59,770 --> 01:06:05,110


499
01:06:05,110 --> 01:06:10,330


500
01:06:10,330 --> 01:06:15,220


501
01:06:15,220 --> 01:06:20,110


502
01:06:20,110 --> 01:06:25,630


503
01:06:25,630 --> 01:06:33,880


504
01:06:33,880 --> 01:06:37,990


505
01:06:40,860 --> 01:06:49,630


506
01:06:49,630 --> 01:06:56,220


507
01:06:59,890 --> 01:07:09,100


508
01:07:09,100 --> 01:07:14,110


509
01:07:14,110 --> 01:07:24,900


510
01:07:24,900 --> 01:07:29,500


511
01:07:29,500 --> 01:07:33,520


512
01:07:33,520 --> 01:07:37,450


513
01:07:37,450 --> 01:07:44,800


514
01:07:44,800 --> 01:07:47,020


515
01:07:47,020 --> 01:07:51,610


516
01:07:51,610 --> 01:08:00,100


517
01:08:00,100 --> 01:08:03,940


518
01:08:03,940 --> 01:08:08,710


519
01:08:08,710 --> 01:08:16,450


520
01:08:16,450 --> 01:08:21,430


521
01:08:21,430 --> 01:08:26,470


522
01:08:26,470 --> 01:08:30,580


523
01:08:30,580 --> 01:08:36,810


524
01:08:36,810 --> 01:08:42,989


525
01:08:44,729 --> 01:08:48,388


526
01:08:48,389 --> 01:08:54,989


527
01:08:57,149 --> 01:09:03,119


528
01:09:03,120 --> 01:09:08,429


529
01:09:08,429 --> 01:09:13,290


530
01:09:13,290 --> 01:09:16,710


531
01:09:16,710 --> 01:09:20,100


532
01:09:20,100 --> 01:09:24,569


533
01:09:24,569 --> 01:09:28,440


534
01:09:30,689 --> 01:09:35,399


535
01:09:35,399 --> 01:09:40,619


536
01:09:40,620 --> 01:09:48,089


537
01:09:48,089 --> 01:09:53,190


538
01:09:53,189 --> 01:09:56,790


539
01:09:56,790 --> 01:10:01,350


540
01:10:01,350 --> 01:10:05,580


541
01:10:05,580 --> 01:10:11,520


542
01:10:11,520 --> 01:10:16,050


543
01:10:16,050 --> 01:10:31,590


544
01:10:31,590 --> 01:10:38,280


545
01:10:38,280 --> 01:10:46,139


546
01:10:46,139 --> 01:10:49,290


547
01:10:49,290 --> 01:11:03,150


548
01:11:03,150 --> 01:11:11,730


549
01:11:11,730 --> 01:11:18,090


550
01:11:18,090 --> 01:11:22,290


551
01:11:22,290 --> 01:11:27,450


552
01:11:27,450 --> 01:11:31,950


553
01:11:31,950 --> 01:11:36,780


554
01:11:36,780 --> 01:11:40,500


555
01:11:40,500 --> 01:11:43,650


556
01:11:43,650 --> 01:11:49,980


557
01:11:49,980 --> 01:11:54,120


558
01:11:54,120 --> 01:11:58,950


559
01:11:58,950 --> 01:12:05,580


560
01:12:05,580 --> 01:12:11,220


561
01:12:11,220 --> 01:12:16,110


562
01:12:18,240 --> 01:12:22,860


563
01:12:22,860 --> 01:12:27,300


564
01:12:27,300 --> 01:12:32,850


565
01:12:32,850 --> 01:12:38,130


566
01:12:38,130 --> 01:12:46,620


567
01:12:46,620 --> 01:12:50,760


568
01:12:50,760 --> 01:12:56,340


569
01:12:56,340 --> 01:13:00,640


570
01:13:00,640 --> 01:13:04,540


571
01:13:04,540 --> 01:13:08,710


572
01:13:08,710 --> 01:13:12,640


573
01:13:12,640 --> 01:13:19,180


574
01:13:19,180 --> 01:13:23,920


575
01:13:23,920 --> 01:13:27,640


576
01:13:27,640 --> 01:13:32,800


577
01:13:32,800 --> 01:13:35,770


578
01:13:35,770 --> 01:13:39,640


579
01:13:39,640 --> 01:13:45,280


580
01:13:47,800 --> 01:13:56,590


581
01:13:56,590 --> 01:14:03,640


582
01:14:03,640 --> 01:14:09,550


583
01:14:09,550 --> 01:14:20,050


584
01:14:20,050 --> 01:14:27,330


585
01:14:27,330 --> 01:14:32,740


586
01:14:32,740 --> 01:14:40,300


587
01:14:40,300 --> 01:14:44,920


588
01:14:44,920 --> 01:14:52,750


589
01:14:52,750 --> 01:15:00,340


590
01:15:00,340 --> 01:15:04,960


591
01:15:04,960 --> 01:15:11,410


592
01:15:11,410 --> 01:15:13,889


593
01:15:13,889 --> 01:15:18,420


594
01:15:18,420 --> 01:15:22,710


595
01:15:22,710 --> 01:15:26,880


596
01:15:26,880 --> 01:15:38,429


597
01:15:38,429 --> 01:15:41,940


598
01:15:44,460 --> 01:15:51,690


599
01:15:51,690 --> 01:15:58,159


600
01:15:58,159 --> 01:16:02,820


601
01:16:02,820 --> 01:16:08,219


602
01:16:08,219 --> 01:16:13,260


603
01:16:13,260 --> 01:16:18,179


604
01:16:18,179 --> 01:16:21,600


605
01:16:21,600 --> 01:16:25,889


606
01:16:25,889 --> 01:16:29,850


607
01:16:29,850 --> 01:16:36,449


608
01:16:38,969 --> 01:16:46,830


609
01:16:46,830 --> 01:16:50,850


610
01:16:50,850 --> 01:16:55,560


611
01:16:55,560 --> 01:17:00,389


612
01:17:00,389 --> 01:17:06,690


613
01:17:08,940 --> 01:17:13,800


614
01:17:13,800 --> 01:17:19,650


615
01:17:21,900 --> 01:17:27,110


616
01:17:27,110 --> 01:17:36,770


617
01:17:36,770 --> 01:17:43,450


618
01:17:46,130 --> 01:17:52,840


619
01:17:52,840 --> 01:17:58,880


620
01:17:58,880 --> 01:18:05,300


621
01:18:05,300 --> 01:18:13,540


622
01:18:13,540 --> 01:18:22,180


623
01:18:22,180 --> 01:18:27,710


624
01:18:27,710 --> 01:18:34,040


625
01:18:34,040 --> 01:18:39,980


626
01:18:39,980 --> 01:18:45,170


627
01:18:45,170 --> 01:18:52,180


628
01:18:52,180 --> 01:18:58,640


629
01:18:58,640 --> 01:19:01,700


630
01:19:05,120 --> 01:19:10,130


631
01:19:10,130 --> 01:19:14,810


632
01:19:14,810 --> 01:19:18,590


633
01:19:18,590 --> 01:19:22,580


634
01:19:22,580 --> 01:19:29,240


635
01:19:29,240 --> 01:19:37,820


636
01:19:37,820 --> 01:19:44,150


637
01:19:44,150 --> 01:19:51,800


638
01:19:51,800 --> 01:19:56,210


639
01:19:56,210 --> 01:20:02,270


640
01:20:02,270 --> 01:20:07,280


641
01:20:10,460 --> 01:20:15,320


642
01:20:15,320 --> 01:20:19,280


643
01:20:19,280 --> 01:20:26,420


644
01:20:26,420 --> 01:20:31,340


645
01:20:31,340 --> 01:20:38,420


646
01:20:38,420 --> 01:20:43,550


647
01:20:43,550 --> 01:20:47,900


648
01:20:49,460 --> 01:20:55,040


649
01:20:55,040 --> 01:21:06,370


650
01:21:06,370 --> 01:21:15,310


651
01:21:15,310 --> 01:21:24,620


652
01:21:27,920 --> 01:21:31,820


653
01:21:31,820 --> 01:21:35,960


654
01:21:35,960 --> 01:21:43,190


655
01:21:43,190 --> 01:21:51,599


656
01:21:51,599 --> 01:22:01,320


657
01:22:01,320 --> 01:22:10,050


658
01:22:10,050 --> 01:22:17,929


659
01:22:18,050 --> 01:22:27,650


660
01:22:31,290 --> 01:22:39,210


661
01:22:39,210 --> 01:22:50,099


662
01:22:50,099 --> 01:22:57,239


663
01:23:00,480 --> 01:23:08,010


664
01:23:08,010 --> 01:23:12,090


665
01:23:12,090 --> 01:23:18,000


666
01:23:18,000 --> 01:23:25,020


667
01:23:25,020 --> 01:23:30,300


668
01:23:30,300 --> 01:23:37,349


669
01:23:37,349 --> 01:23:43,889


670
01:23:43,889 --> 01:23:54,869


671
01:23:54,869 --> 01:24:00,989


672
01:24:00,989 --> 01:24:05,190


673
01:24:05,190 --> 01:24:09,360


674
01:24:09,360 --> 01:24:14,100


675
01:24:14,100 --> 01:24:21,270


676
01:24:21,270 --> 01:24:27,690


677
01:24:31,290 --> 01:24:37,230


678
01:24:37,230 --> 01:24:41,760


679
01:24:41,760 --> 01:24:46,020


680
01:24:46,020 --> 01:24:52,680


681
01:24:52,680 --> 01:24:57,750


682
01:24:57,750 --> 01:25:01,770


683
01:25:01,770 --> 01:25:11,160


684
01:25:14,250 --> 01:25:18,570


685
01:25:18,570 --> 01:25:21,810


686
01:25:21,810 --> 01:25:28,469


687
01:25:28,469 --> 01:25:32,820


688
01:25:32,820 --> 01:25:38,550


689
01:25:38,550 --> 01:25:41,670


690
01:25:41,670 --> 01:25:47,100


691
01:25:47,100 --> 01:25:52,320


692
01:25:56,300 --> 01:26:01,580


693
01:26:01,580 --> 01:26:07,980


694
01:26:07,980 --> 01:26:14,160


695
01:26:14,160 --> 01:26:16,199


696
01:26:16,199 --> 01:26:20,550


697
01:26:20,550 --> 01:26:26,070


698
01:26:28,220 --> 01:26:34,950


699
01:26:34,950 --> 01:26:42,630


700
01:26:42,630 --> 01:26:45,690


701
01:26:48,030 --> 01:26:52,890


702
01:26:52,890 --> 01:26:57,660


703
01:27:00,810 --> 01:27:05,280


704
01:27:08,130 --> 01:27:14,610


705
01:27:14,610 --> 01:27:20,340


706
01:27:20,340 --> 01:27:25,860


707
01:27:27,840 --> 01:27:31,800


708
01:27:31,800 --> 01:27:38,100


709
01:27:38,100 --> 01:27:48,600


710
01:27:48,600 --> 01:27:54,810


711
01:27:54,810 --> 01:27:59,820


712
01:28:02,490 --> 01:28:07,830


713
01:28:07,830 --> 01:28:12,270


714
01:28:12,270 --> 01:28:18,570


715
01:28:24,420 --> 01:28:30,750


716
01:28:30,750 --> 01:28:34,619


717
01:28:34,619 --> 01:28:40,789


718
01:28:40,789 --> 01:28:46,590


719
01:28:46,590 --> 01:28:51,269


720
01:28:51,269 --> 01:28:59,309


721
01:28:59,309 --> 01:29:03,030


722
01:29:03,030 --> 01:29:10,230


723
01:29:10,230 --> 01:29:15,599


724
01:29:15,599 --> 01:29:23,519


725
01:29:23,519 --> 01:29:26,429


726
01:29:26,429 --> 01:29:30,960


727
01:29:30,960 --> 01:29:35,699


728
01:29:35,699 --> 01:29:50,789


729
01:29:50,789 --> 01:29:55,110


730
01:29:55,110 --> 01:29:57,389


731
01:29:57,389 --> 01:30:01,499


732
01:30:01,499 --> 01:30:06,269


733
01:30:06,269 --> 01:30:10,920


734
01:30:10,920 --> 01:30:15,420


735
01:30:15,420 --> 01:30:22,019


736
01:30:22,019 --> 01:30:24,960


737
01:30:24,960 --> 01:30:30,869


738
01:30:30,869 --> 01:30:36,150


739
01:30:36,150 --> 01:30:43,349


740
01:30:43,349 --> 01:30:51,000


741
01:30:51,000 --> 01:30:57,620


742
01:31:00,770 --> 01:31:08,489


743
01:31:12,570 --> 01:31:18,510


744
01:31:18,510 --> 01:31:22,830


745
01:31:22,830 --> 01:31:28,320


746
01:31:28,320 --> 01:31:31,710


747
01:31:31,710 --> 01:31:39,210


748
01:31:39,210 --> 01:31:48,630


749
01:31:48,630 --> 01:31:53,520


750
01:31:53,520 --> 01:32:08,790


751
01:32:18,630 --> 01:32:24,719


752
01:32:24,719 --> 01:32:31,469


753
01:32:31,469 --> 01:32:37,590


754
01:32:37,590 --> 01:32:42,780


755
01:32:42,780 --> 01:32:47,010


756
01:32:47,010 --> 01:32:52,230


757
01:32:53,790 --> 01:32:57,989


758
01:32:57,989 --> 01:33:02,500


759
01:33:02,500 --> 01:33:08,710


760
01:33:08,710 --> 01:33:12,040


761
01:33:12,040 --> 01:33:15,880


762
01:33:15,880 --> 01:33:27,000


763
01:33:27,000 --> 01:33:34,870


764
01:33:34,870 --> 01:33:42,220


765
01:33:42,220 --> 01:33:49,330


766
01:33:49,330 --> 01:33:54,160


767
01:33:54,160 --> 01:34:03,220


768
01:34:03,220 --> 01:34:08,110


769
01:34:11,200 --> 01:34:16,030


770
01:34:16,030 --> 01:34:20,560


771
01:34:20,560 --> 01:34:23,770


772
01:34:23,770 --> 01:34:30,040


773
01:34:30,430 --> 01:34:37,270


774
01:34:37,270 --> 01:34:45,330


775
01:34:48,400 --> 01:34:54,460


776
01:34:54,460 --> 01:35:09,160


777
01:35:09,160 --> 01:35:18,290


778
01:35:18,290 --> 01:35:23,630


779
01:35:23,630 --> 01:35:27,410


780
01:35:27,410 --> 01:35:32,180


781
01:35:32,180 --> 01:35:38,300


782
01:35:38,300 --> 01:35:45,650


783
01:35:47,450 --> 01:35:53,060


784
01:35:53,060 --> 01:36:03,740


785
01:36:06,500 --> 01:36:13,820


786
01:36:13,820 --> 01:36:18,440


787
01:36:18,440 --> 01:36:24,670


788
01:36:24,670 --> 01:36:27,850


789
01:36:27,880 --> 01:36:34,430


790
01:36:34,430 --> 01:36:37,940


791
01:36:41,390 --> 01:36:47,240


792
01:36:51,710 --> 01:36:54,860


793
01:36:54,860 --> 01:37:02,950


794
01:37:02,950 --> 01:37:10,460


795
01:37:10,460 --> 01:37:15,050


796
01:37:15,050 --> 01:37:20,330


797
01:37:20,330 --> 01:37:24,410


798
01:37:24,410 --> 01:37:33,019


799
01:37:33,019 --> 01:37:40,129


800
01:37:40,129 --> 01:37:45,769


801
01:37:45,769 --> 01:37:49,760


802
01:37:49,760 --> 01:37:57,049


803
01:37:57,049 --> 01:38:05,599


804
01:38:05,599 --> 01:38:09,969


805
01:38:09,969 --> 01:38:18,129


806
01:38:18,129 --> 01:38:23,059


807
01:38:23,059 --> 01:38:26,419


808
01:38:26,419 --> 01:38:30,769


809
01:38:30,769 --> 01:38:40,969


810
01:38:40,969 --> 01:38:46,219


811
01:38:46,219 --> 01:38:51,229


812
01:38:51,229 --> 01:38:59,089


813
01:38:59,089 --> 01:39:03,349


814
01:39:03,349 --> 01:39:07,399


815
01:39:07,399 --> 01:39:11,749


816
01:39:13,999 --> 01:39:18,469


817
01:39:18,469 --> 01:39:24,049


818
01:39:24,049 --> 01:39:30,530


819
01:39:30,530 --> 01:39:34,609


820
01:39:34,609 --> 01:39:39,570


821
01:39:43,530 --> 01:39:47,760


822
01:39:47,760 --> 01:39:51,540


823
01:39:51,540 --> 01:39:56,430


824
01:39:56,430 --> 01:40:00,540


825
01:40:00,540 --> 01:40:03,240


826
01:40:03,240 --> 01:40:08,910


827
01:40:08,910 --> 01:40:14,220


828
01:40:14,220 --> 01:40:18,390


829
01:40:18,390 --> 01:40:23,460


830
01:40:23,460 --> 01:40:29,490


831
01:40:29,490 --> 01:40:33,660


832
01:40:33,660 --> 01:40:36,780


833
01:40:36,780 --> 01:40:41,970


834
01:40:41,970 --> 01:40:47,640


835
01:40:47,640 --> 01:40:51,810


836
01:40:51,810 --> 01:40:58,080


837
01:41:01,710 --> 01:41:07,680


838
01:41:07,680 --> 01:41:13,620


839
01:41:13,620 --> 01:41:20,010


840
01:41:20,010 --> 01:41:29,010


841
01:41:29,010 --> 01:41:36,240


842
01:41:36,240 --> 01:41:42,020


843
01:41:42,890 --> 01:41:49,950


844
01:41:52,040 --> 01:41:56,050


845
01:41:56,050 --> 01:42:02,770


846
01:42:02,770 --> 01:42:06,969


847
01:42:06,969 --> 01:42:13,630


848
01:42:13,630 --> 01:42:22,090


849
01:42:22,090 --> 01:42:26,890


850
01:42:26,890 --> 01:42:33,580


851
01:42:33,580 --> 01:42:38,380


852
01:42:38,380 --> 01:42:45,850


853
01:42:45,850 --> 01:42:52,719


854
01:42:52,719 --> 01:43:03,100


855
01:43:03,100 --> 01:43:07,989


856
01:43:09,790 --> 01:43:14,739


857
01:43:14,739 --> 01:43:21,400


858
01:43:21,400 --> 01:43:24,250


859
01:43:24,250 --> 01:43:28,480


860
01:43:28,480 --> 01:43:37,870


861
01:43:37,870 --> 01:43:42,880


862
01:43:42,880 --> 01:43:47,199


863
01:43:49,060 --> 01:43:54,310


864
01:43:54,310 --> 01:43:59,260


865
01:43:59,260 --> 01:44:07,000


866
01:44:07,000 --> 01:44:14,200


867
01:44:14,200 --> 01:44:24,640


868
01:44:24,640 --> 01:44:29,020


869
01:44:29,020 --> 01:44:35,860


870
01:44:39,760 --> 01:44:43,060


871
01:44:43,060 --> 01:44:47,830


872
01:44:51,960 --> 01:44:56,380


873
01:44:56,380 --> 01:45:00,640


874
01:45:00,640 --> 01:45:04,240


875
01:45:06,430 --> 01:45:10,840


876
01:45:10,840 --> 01:45:15,580


877
01:45:15,580 --> 01:45:19,720


878
01:45:19,720 --> 01:45:23,530


879
01:45:28,270 --> 01:45:34,270


880
01:45:34,270 --> 01:45:40,150


881
01:45:41,500 --> 01:45:46,600


882
01:45:46,600 --> 01:45:53,050


883
01:45:53,050 --> 01:46:02,920


884
01:46:02,920 --> 01:46:10,720


885
01:46:10,720 --> 01:46:17,550


886
01:46:17,550 --> 01:46:22,450


887
01:46:22,450 --> 01:46:26,380


888
01:46:26,380 --> 01:46:33,670


889
01:46:33,670 --> 01:46:42,160


890
01:46:42,160 --> 01:46:45,100


891
01:46:45,100 --> 01:47:00,940


892
01:47:02,170 --> 01:47:06,940


893
01:47:10,960 --> 01:47:13,330


894
01:47:13,330 --> 01:47:17,860


895
01:47:17,860 --> 01:47:23,020


896
01:47:23,020 --> 01:47:25,690


897
01:47:28,150 --> 01:47:36,310


898
01:47:36,310 --> 01:47:43,810


899
01:47:43,810 --> 01:47:47,020


900
01:47:47,020 --> 01:47:56,440


901
01:47:59,170 --> 01:48:03,910


902
01:48:03,910 --> 01:48:10,240


903
01:48:10,240 --> 01:48:16,270


904
01:48:16,270 --> 01:48:23,050


905
01:48:23,050 --> 01:48:27,790


906
01:48:27,790 --> 01:48:31,750


907
01:48:31,750 --> 01:48:34,929


908
01:48:34,929 --> 01:48:39,429


909
01:48:39,429 --> 01:48:43,540


910
01:48:43,540 --> 01:48:48,010


911
01:48:48,010 --> 01:48:54,400


912
01:48:57,520 --> 01:49:03,159


913
01:49:05,079 --> 01:49:09,610


914
01:49:09,610 --> 01:49:14,020


915
01:49:14,020 --> 01:49:19,510


916
01:49:19,510 --> 01:49:23,860


917
01:49:25,480 --> 01:49:28,599


918
01:49:28,599 --> 01:49:33,880


919
01:49:33,880 --> 01:49:38,790


920
01:49:38,790 --> 01:49:45,130


921
01:49:45,130 --> 01:49:48,550


922
01:49:48,550 --> 01:49:52,090


923
01:49:52,090 --> 01:49:55,420


924
01:49:55,420 --> 01:49:59,710


925
01:49:59,710 --> 01:50:05,469


926
01:50:05,469 --> 01:50:10,719


927
01:50:10,719 --> 01:50:17,139


928
01:50:17,139 --> 01:50:22,239


929
01:50:24,670 --> 01:50:28,060


930
01:50:28,060 --> 01:50:37,300


931
01:50:37,300 --> 01:50:45,219


932
01:50:45,219 --> 01:50:52,239


933
01:50:56,349 --> 01:51:02,530


934
01:51:02,530 --> 01:51:09,099


935
01:51:09,099 --> 01:51:11,800


936
01:51:11,800 --> 01:51:17,590


937
01:51:17,590 --> 01:51:26,170


938
01:51:26,170 --> 01:51:32,559


939
01:51:32,559 --> 01:51:41,139


940
01:51:41,139 --> 01:51:48,849


941
01:51:48,849 --> 01:51:56,440


942
01:51:59,050 --> 01:52:06,070


943
01:52:10,420 --> 01:52:13,809


944
01:52:13,809 --> 01:52:19,570


945
01:52:22,989 --> 01:52:32,070


946
01:52:32,070 --> 01:52:40,989


947
01:52:40,989 --> 01:52:45,550


948
01:52:45,550 --> 01:52:49,690


949
01:52:53,769 --> 01:52:58,990


950
01:52:58,990 --> 01:53:05,170


951
01:53:05,170 --> 01:53:12,220


952
01:53:12,220 --> 01:53:19,750


953
01:53:19,750 --> 01:53:30,610


954
01:53:30,610 --> 01:53:35,410


955
01:53:35,410 --> 01:53:40,180


956
01:53:40,180 --> 01:53:51,850


957
01:53:51,850 --> 01:53:56,830


958
01:53:56,830 --> 01:54:01,260


959
01:54:01,260 --> 01:54:11,350


960
01:54:11,350 --> 01:54:16,510


961
01:54:16,510 --> 01:54:21,430


962
01:54:21,430 --> 01:54:28,810


963
01:54:28,810 --> 01:54:39,340


964
01:54:39,340 --> 01:54:49,660


965
01:54:49,660 --> 01:54:59,110


966
01:54:59,110 --> 01:55:03,850


967
01:55:03,850 --> 01:55:13,020


968
01:55:13,020 --> 01:55:26,800


969
01:55:26,800 --> 01:55:32,650


970
01:55:35,830 --> 01:55:41,740


971
01:55:41,740 --> 01:55:48,940


972
01:55:48,940 --> 01:55:55,600


973
01:55:55,600 --> 01:56:03,280


974
01:56:08,080 --> 01:56:14,200


975
01:56:14,200 --> 01:56:18,790


976
01:56:18,790 --> 01:56:24,100


977
01:56:24,100 --> 01:56:28,300


978
01:56:28,300 --> 01:56:32,140


979
01:56:32,140 --> 01:56:35,680


980
01:56:35,680 --> 01:56:40,240


981
01:56:41,950 --> 01:56:46,810


982
01:56:46,810 --> 01:56:51,700


983
01:56:57,340 --> 01:57:04,300


984
01:57:04,300 --> 01:57:11,950


985
01:57:11,950 --> 01:57:22,620


986
01:57:26,160 --> 01:57:31,660


987
01:57:31,660 --> 01:57:38,710


988
01:57:38,710 --> 01:57:41,680


989
01:57:41,680 --> 01:57:45,910


990
01:57:45,910 --> 01:57:50,800


991
01:57:50,800 --> 01:57:55,300


992
01:57:55,300 --> 01:57:59,170


993
01:57:59,170 --> 01:58:03,330


994
01:58:03,330 --> 01:58:08,140


995
01:58:08,140 --> 01:58:12,160


996
01:58:13,750 --> 01:58:21,670


997
01:58:21,670 --> 01:58:26,230


998
01:58:37,930 --> 01:58:44,740


999
01:58:46,960 --> 01:58:58,000


1000
01:58:58,000 --> 01:59:03,240


1001
01:59:03,720 --> 01:59:18,220


1002
01:59:18,220 --> 01:59:22,720


1003
01:59:22,720 --> 01:59:25,690


1004
01:59:29,020 --> 01:59:36,690


1005
01:59:38,489 --> 01:59:41,700


1006
01:59:41,700 --> 01:59:46,440


1007
01:59:46,440 --> 01:59:50,670


1008
01:59:50,670 --> 01:59:56,880


1009
01:59:56,880 --> 02:00:00,330


1010
02:00:00,330 --> 02:00:08,640


1011
02:00:08,640 --> 02:00:14,730


1012
02:00:17,310 --> 02:00:22,200


1013
02:00:24,750 --> 02:00:31,170


1014
02:00:31,170 --> 02:00:36,390


1015
02:00:36,390 --> 02:00:43,710


1016
02:00:43,710 --> 02:00:49,560


1017
02:00:49,560 --> 02:00:53,660


1018
02:00:58,830 --> 02:01:04,560


1019
02:01:04,560 --> 02:01:09,690


1020
02:01:13,920 --> 02:01:19,020


1021
02:01:19,020 --> 02:01:25,230


1022
02:01:28,290 --> 02:01:34,110


1023
02:01:34,110 --> 02:01:42,960


1024
02:01:42,960 --> 02:01:49,989


1025
02:01:56,739 --> 02:02:00,400


1026
02:02:00,400 --> 02:02:05,650


1027
02:02:05,650 --> 02:02:12,730


1028
02:02:12,730 --> 02:02:19,300


1029
02:02:19,300 --> 02:02:25,690


1030
02:02:28,750 --> 02:02:36,550


1031
02:02:36,550 --> 02:02:41,680


1032
02:02:41,680 --> 02:02:48,610


1033
02:02:52,920 --> 02:03:00,610


1034
02:03:00,610 --> 02:03:07,210


1035
02:03:07,210 --> 02:03:13,210


1036
02:03:13,210 --> 02:03:22,420


1037
02:03:22,420 --> 02:03:28,780


1038
02:03:28,780 --> 02:03:34,090


1039
02:03:34,090 --> 02:03:37,630


1040
02:03:37,630 --> 02:03:42,130


1041
02:03:42,130 --> 02:03:47,830


1042
02:03:47,830 --> 02:03:53,370


1043
02:04:00,180 --> 02:04:10,380


1044
02:04:10,380 --> 02:04:14,980


1045
02:04:16,210 --> 02:04:22,360


1046
02:04:22,360 --> 02:04:31,900


1047
02:04:31,900 --> 02:04:36,489


1048
02:04:36,489 --> 02:04:40,930


1049
02:04:40,930 --> 02:04:47,290


1050
02:04:47,290 --> 02:04:52,390


1051
02:04:52,390 --> 02:04:58,120


1052
02:04:58,120 --> 02:05:02,770


1053
02:05:02,770 --> 02:05:09,190


1054
02:05:11,949 --> 02:05:15,280


1055
02:05:15,280 --> 02:05:22,840


1056
02:05:22,840 --> 02:05:28,180


1057
02:05:28,180 --> 02:05:33,730


1058
02:05:35,890 --> 02:05:39,670


1059
02:05:39,670 --> 02:05:44,080


1060
02:05:44,080 --> 02:05:50,620


1061
02:05:50,620 --> 02:05:55,090


1062
02:05:55,090 --> 02:05:59,440


1063
02:06:00,820 --> 02:06:06,850


1064
02:06:06,850 --> 02:06:11,020


1065
02:06:11,020 --> 02:06:15,580


1066
02:06:17,260 --> 02:06:21,730


1067
02:06:24,400 --> 02:06:30,340


1068
02:06:30,340 --> 02:06:37,540


1069
02:06:37,540 --> 02:06:42,370


1070
02:06:42,370 --> 02:06:49,320


1071
02:06:49,320 --> 02:06:55,300


1072
02:06:55,300 --> 02:06:58,750


1073
02:06:58,750 --> 02:07:04,060


1074
02:07:04,060 --> 02:07:09,550


1075
02:07:09,550 --> 02:07:14,980


1076
02:07:16,840 --> 02:07:22,630


1077
02:07:22,630 --> 02:07:26,980


1078
02:07:28,510 --> 02:07:34,870


1079
02:07:34,870 --> 02:07:41,320


1080
02:07:41,320 --> 02:07:46,210


1081
02:07:46,210 --> 02:07:53,260


1082
02:07:53,260 --> 02:07:56,650


1083
02:07:59,290 --> 02:08:03,480


1084
02:08:03,480 --> 02:08:09,760


1085
02:08:09,760 --> 02:08:13,120


1086
02:08:13,120 --> 02:08:18,100


1087
02:08:18,100 --> 02:08:22,240


1088
02:08:24,700 --> 02:08:29,650


1089
02:08:29,650 --> 02:08:33,010


1090
02:08:33,010 --> 02:08:37,720


1091
02:08:37,720 --> 02:08:43,060


1092
02:08:43,060 --> 02:08:48,550


1093
02:08:48,550 --> 02:08:55,030


1094
02:08:55,030 --> 02:08:58,840


1095
02:08:58,840 --> 02:09:04,660


1096
02:09:04,660 --> 02:09:09,940


1097
02:09:09,940 --> 02:09:13,540


1098
02:09:13,540 --> 02:09:18,660


1099
02:09:19,830 --> 02:09:25,000


1100
02:09:25,000 --> 02:09:31,480


1101
02:09:31,480 --> 02:09:35,140


1102
02:09:35,140 --> 02:09:42,100


1103
02:09:42,100 --> 02:09:48,370


1104
02:09:50,500 --> 02:09:56,500


1105
02:09:56,500 --> 02:10:00,670


1106
02:10:00,670 --> 02:10:03,790


1107
02:10:03,790 --> 02:10:15,430


1108
02:10:15,430 --> 02:10:21,310


1109
02:10:21,310 --> 02:10:26,770


1110
02:10:26,770 --> 02:10:29,590


1111
02:10:29,590 --> 02:10:35,500


1112
02:10:35,500 --> 02:10:38,610


1113
02:10:38,610 --> 02:10:45,930


1114
02:10:45,930 --> 02:10:50,880


1115
02:10:50,880 --> 02:10:57,720


1116
02:10:57,720 --> 02:11:02,850


1117
02:11:02,850 --> 02:11:12,750


1118
02:11:12,750 --> 02:11:19,860


1119
02:11:19,860 --> 02:11:27,480


1120
02:11:27,480 --> 02:11:34,739


1121
02:11:34,739 --> 02:11:39,510


1122
02:11:39,510 --> 02:11:46,440


1123
02:11:48,570 --> 02:11:54,330


1124
02:11:54,330 --> 02:11:57,989


1125
02:11:57,989 --> 02:12:03,360


1126
02:12:03,360 --> 02:12:08,910


1127
02:12:08,910 --> 02:12:14,100


1128
02:12:14,100 --> 02:12:19,140


1129
02:12:19,140 --> 02:12:23,400


1130
02:12:26,130 --> 02:12:32,880


1131
02:12:32,880 --> 02:12:39,270


1132
02:12:39,270 --> 02:12:49,619


1133
02:12:55,960 --> 02:13:04,840


1134
02:13:04,840 --> 02:13:10,750


1135
02:13:10,750 --> 02:13:15,909


1136
02:13:15,909 --> 02:13:19,630


1137
02:13:19,630 --> 02:13:24,219


1138
02:13:24,219 --> 02:13:31,719


1139
02:13:31,719 --> 02:13:39,159


1140
02:13:39,159 --> 02:13:47,679


1141
02:13:47,679 --> 02:13:52,150


1142
02:13:52,150 --> 02:13:57,550


1143
02:13:57,550 --> 02:14:02,770


1144
02:14:02,770 --> 02:14:07,210


1145
02:14:07,210 --> 02:14:14,469


1146
02:14:14,469 --> 02:14:21,780


1147
02:14:21,780 --> 02:14:28,809


1148
02:14:28,809 --> 02:14:35,829


1149
02:14:38,139 --> 02:14:42,940


1150
02:14:46,929 --> 02:14:53,559


1151
02:14:53,559 --> 02:14:56,920


1152
02:14:56,920 --> 02:15:02,739


1153
02:15:03,070 --> 02:15:09,580


1154
02:15:09,580 --> 02:15:15,460


1155
02:15:15,460 --> 02:15:22,000


1156
02:15:22,000 --> 02:15:28,480


1157
02:15:28,480 --> 02:15:32,110


1158
02:15:32,110 --> 02:15:36,400


1159
02:15:36,400 --> 02:15:40,300


1160
02:15:40,300 --> 02:15:47,410


1161
02:15:47,410 --> 02:15:51,970


1162
02:15:51,970 --> 02:15:57,340


1163
02:15:57,340 --> 02:16:01,960


1164
02:16:01,960 --> 02:16:11,440


1165
02:16:11,440 --> 02:16:17,410


1166
02:16:17,410 --> 02:16:26,950


1167
02:16:26,950 --> 02:16:34,510


1168
02:16:34,510 --> 02:16:40,150


1169
02:16:40,150 --> 02:16:46,540


1170
02:16:46,540 --> 02:16:53,200


1171
02:16:53,200 --> 02:16:57,460


1172
02:16:59,170 --> 02:17:03,130


1173
02:17:03,129 --> 02:17:05,550


1174
02:17:06,620 --> 02:17:11,460


1175
02:17:12,660 --> 02:17:21,420


1176
02:17:21,420 --> 02:17:27,030


1177
02:17:27,030 --> 02:17:32,640


1178
02:17:35,280 --> 02:17:40,350


1179
02:17:40,350 --> 02:17:46,080


1180
02:17:46,080 --> 02:17:50,340


1181
02:17:50,340 --> 02:17:57,120


1182
02:17:57,120 --> 02:18:00,480


1183
02:18:02,459 --> 02:18:06,149


1184
02:18:06,150 --> 02:18:10,680


1185
02:18:10,680 --> 02:18:17,280


1186
02:18:17,280 --> 02:18:21,060


1187
02:18:23,309 --> 02:18:26,969


1188
02:18:26,969 --> 02:18:32,219


1189
02:18:32,219 --> 02:18:39,439


